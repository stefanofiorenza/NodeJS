From: <Saved by Blink>
Snapshot-Content-Location: https://codewithhugo.com/testing-an-express-app-with-supertest-moxios-and-jest/
Subject: =?utf-8?Q?Testing=20an=20Express=20app=20with=20SuperTest,=20moxios=20and?=
 =?utf-8?Q?=20Jest=20=C2=B7=20Code=20with=20Hugo?=
Date: Tue, 15 Oct 2019 07:38:35 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----"


------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: text/html
Content-ID: <frame-050CC0339A2F604928D153BC1DC0B6DC@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://codewithhugo.com/testing-an-express-app-with-supertest-moxios-and-jest/

<!DOCTYPE html><html lang=3D"en-us"><head><meta http-equiv=3D"Content-Type"=
 content=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"te=
xt/css" href=3D"cid:css-829b8610-b64e-4256-952f-9bbe0b234bcf@mhtml.blink" /=
><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-028b0c91-c58f-4=
88b-b2a9-9ddc2428de4e@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-2dc95087-34f4-48ff-b1ad-42b5a6958011@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-82ee99a6-b712-48cd=
-a544-0d87d75e00d4@mhtml.blink" /><meta http-equiv=3D"x-ua-compatible" cont=
ent=3D"IE=3Dedge,chrome=3D1"><meta name=3D"google-site-verification" conten=
t=3D"gBfbdXRLofaOyHsbgiSiuCIHKPaviGMRVWh_qOfDHNE"><title>Testing an Express=
 app with SuperTest, moxios and Jest =C2=B7 Code with Hugo</title><meta nam=
e=3D"HandheldFriendly" content=3D"True"><meta name=3D"viewport" content=3D"=
width=3Ddevice-width,initial-scale=3D1"><link rel=3D"apple-touch-icon" size=
s=3D"120x120" href=3D"https://codewithhugo.com/apple-touch-icon.png"><link =
rel=3D"icon" type=3D"image/png" sizes=3D"32x32" href=3D"https://codewithhug=
o.com/favicon-32x32.png"><link rel=3D"icon" type=3D"image/png" sizes=3D"16x=
16" href=3D"https://codewithhugo.com/favicon-16x16.png"><link rel=3D"manife=
st" href=3D"https://codewithhugo.com/site.webmanifest"><link rel=3D"mask-ic=
on" href=3D"https://codewithhugo.com/safari-pinned-tab.svg" color=3D"#5bbad=
5"><meta name=3D"msapplication-TileColor" content=3D"#00aba9"><meta name=3D=
"theme-color" content=3D"#090a0b"><link rel=3D"shortcut icon" href=3D"https=
://codewithhugo.com/favicon.ico"><meta name=3D"theme-color" content=3D"#090=
a0b"><link rel=3D"canonical" href=3D"https://codewithhugo.com/testing-an-ex=
press-app-with-supertest-moxios-and-jest/"><meta name=3D"description" conte=
nt=3D"<p>Testing is a crucial part of the software development process.
It helps to catch bugs, avoid regressions and to document the behaviour of =
a piece of software"><meta name=3D"twitter:card" content=3D"summary_large_i=
mage"><meta name=3D"twitter:image" content=3D"https://codewithhugo.com/test=
ing-an-express-app-with-supertest-moxios-and-jest/bekir-donmez-unsplash_hu1=
b70a0026307992934f1dc9b7f65dacb_58291_800x0_resize_q60_box.jpg"><meta name=
=3D"twitter:title" content=3D"Testing an Express app with SuperTest, moxios=
 and Jest"><meta name=3D"twitter:description" content=3D"<p>Testing is a cr=
ucial part of the software development process.
It helps to catch bugs, avoid regressions and to document the behaviour of =
a piece of software"><meta name=3D"twitter:url" content=3D"https://codewith=
hugo.com/testing-an-express-app-with-supertest-moxios-and-jest/"><meta name=
=3D"twitter:site" content=3D"@hugo__df"><meta property=3D"og:site_name" con=
tent=3D"Code with Hugo"><meta property=3D"og:title" content=3D"Testing an E=
xpress app with SuperTest, moxios and Jest =C2=B7 Code with Hugo"><meta pro=
perty=3D"og:url" content=3D"https://codewithhugo.com/testing-an-express-app=
-with-supertest-moxios-and-jest/"><meta property=3D"og:type" content=3D"art=
icle"><meta property=3D"og:description" content=3D"<p>Testing is a crucial =
part of the software development process.
It helps to catch bugs, avoid regressions and to document the behaviour of =
a piece of software"><meta property=3D"article:published_time" content=3D"2=
018-06-27T00:00:00Z"><meta property=3D"article:tag" content=3D"JavaScript">=
<meta property=3D"article:tag" content=3D"Express"><meta property=3D"articl=
e:tag" content=3D"jest"><meta property=3D"article:tag" content=3D"Node"><me=
ta property=3D"article:tag" content=3D"Testing"><meta property=3D"og:image"=
 content=3D"https://codewithhugo.com/testing-an-express-app-with-supertest-=
moxios-and-jest/bekir-donmez-unsplash_hu1b70a0026307992934f1dc9b7f65dacb_58=
291_1200x0_resize_q60_box.jpg"><meta name=3D"generator" content=3D"Hugo 0.5=
4.0"><meta name=3D"msvalidate.01" content=3D"AB3DF94B48DA504644F2CA389A99D5=
E0"></head><body class=3D"post-template"><div class=3D"site-wrapper"><heade=
r class=3D"site-header outer"><div class=3D"inner"><nav class=3D"site-nav">=
<div class=3D"site-nav-left"><ul class=3D"nav" role=3D"menu"><li role=3D"me=
nuitem"><a href=3D"https://codewithhugo.com/">Home</a></li><li role=3D"menu=
item"><a href=3D"https://codewithhugo.com/guides/">guides</a></li><li role=
=3D"menuitem"><a href=3D"https://codewithhugo.com/tags/javascript/">JavaScr=
ipt</a></li><li role=3D"menuitem"><a href=3D"https://codewithhugo.com/tags/=
node/">Node</a></li><li role=3D"menuitem"><a href=3D"https://codewithhugo.c=
om/tags/jest/">Jest</a></li><li role=3D"menuitem"><a href=3D"https://codewi=
thhugo.com/about/#more-content">More...</a></li><li role=3D"menuitem"><a hr=
ef=3D"https://codewithhugo.com/search">Search</a></li><li role=3D"menuitem"=
><a href=3D"https://codewithhugo.com/about/">About</a></li><li role=3D"menu=
item"><a href=3D"https://codewithhugo.com/uses/">Gear &amp; Setup</a></li><=
/ul></div><div class=3D"site-nav-right"><div class=3D"social-links"><a clas=
s=3D"social-link social-link-tw" href=3D"https://twitter.com/hugo__df" targ=
et=3D"_blank" rel=3D"noopener"><svg xmlns=3D"http://www.w3.org/2000/svg" vi=
ewBox=3D"0 0 32 32"><path d=3D"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2=
.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088.0 0 1-2.063 4.438c-.87=
5 1.438-2 2.688-3.25 3.813a15.015 15.015.0 0 1-4.625 2.563c-1.813.688-3.75 =
1-5.75 1-3.25.0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688.0 5.=
063-.875 7.188-2.5-1.25.0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.=
438.063.813.125 1.125.125.5.0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.9=
38a5.673 5.673.0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5=
.228.0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75.0-1.063.25-2.063.75-2.938 =
1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579.0 0 1 =
1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.=
48.0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.=
438 3.313-.875z"></path></svg></a><a class=3D"social-link" href=3D"https://=
github.com/HugoDF" target=3D"_blank" rel=3D"noopener"><svg xmlns=3D"http://=
www.w3.org/2000/svg" viewBox=3D"0 0 24 24"><path d=3D"M12 .297c-6.63.0-12 5=
.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577.0-.285-.01-=
1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633=
 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 =
1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.33=
2-5.466-5.93.0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176.0.0 1=
.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1=
.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.2=
3 3.22.0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22.0 1.606-.015 2.=
896-.015 3.286.0.315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627=
-5.373-12-12-12"></path></svg></a><a class=3D"social-link" href=3D"https://=
medium.com/@hugo__df" target=3D"_blank" rel=3D"noopener"><svg xmlns=3D"http=
://www.w3.org/2000/svg" viewBox=3D"0 0 195 195"><path d=3D"M46.5340803 65.2=
157554C46.6968378 63.6076572 46.0836 62.018231 44.8828198 60.93592L32.65126=
05 46.2010582V44H70.6302521L99.9859944 108.380952 125.794585 44H162V46.2010=
582L151.542017 56.2281011C150.640424 56.9153477 150.193188 58.0448862 150.3=
80019 59.1628454V132.837155C150.193188 133.955114 150.640424 135.084652 151=
.542017 135.771899L161.755369 145.798942V148H110.38282V145.798942L120.96311=
9 135.527337C122.002801 134.487948 122.002801 134.182246 122.002801 132.592=
593V73.0417402L92.585901 147.755438H88.6106443L54.3622782 73.0417402V123.11=
5814C54.0767278 125.221069 54.7759199 127.3406 56.2581699 128.863022L70.018=
6741 145.55438V147.755438H31V145.55438L44.7605042 128.863022C46.2319621 127=
.338076 46.8903838 125.204485 46.5340803 123.115814V65.2157554z"></path></s=
vg></a></div><a class=3D"subscribe-button" href=3D"https://codewithhugo.com=
/index.xml">Subscribe</a></div></nav></div></header><main id=3D"site-main" =
class=3D"site-main outer" role=3D"main"><div class=3D"inner"><article class=
=3D"post-full post"><aside id=3D"codefund" class=3D"related-links"><div id=
=3D"cf"> <div class=3D"cf-wrapper" style=3D"max-width: 330px; display: bloc=
k; font-size: 14px; line-height: 1.4; font-family: Helvetica, Arial; margin=
-left: auto; margin-right: auto; padding: 15px;" align=3D"center"> <div cla=
ss=3D"cf-header" style=3D"font-size: 12px; color: #678; display: block; mar=
gin-bottom: 8px;">Proudly sponsored by</div> <a data-href=3D"campaign_url" =
class=3D"cf-text" target=3D"_blank" rel=3D"nofollow noopener" style=3D"box-=
shadow: none !important; color: #333; text-decoration: none;" href=3D"https=
://codefund.io/impressions/6fcc289d-9acb-4d04-bf46-000e69d751d2/click?campa=
ign_id=3D450&amp;creative_id=3D425&amp;property_id=3D146&amp;template=3Dcen=
tered&amp;theme=3Dlight"> <strong>Try Buildkite!</strong> <span>Fast, secur=
e, and scalable CI/CD for all your software projects.</span> </a> <a href=
=3D"https://codefund.io/invite/PHYZZKbm-E8" data-target=3D"powered_by_url" =
class=3D"cf-powered-by" target=3D"_blank" rel=3D"nofollow noopener" style=
=3D"box-shadow: none !important; margin-top: 5px; font-size: 11px; display:=
 block; color: #678; text-decoration: none; text-align: center;"> <em>ethic=
al</em> ad by CodeFund <img data-src=3D"impression_url" alt=3D"" style=3D"p=
osition: fixed; left: -1000px; top: -1000px;" src=3D"https://codefund.io/di=
splay/6fcc289d-9acb-4d04-bf46-000e69d751d2.gif"> </a> </div> </div> </aside=
><header class=3D"post-full-header"><section class=3D"post-full-meta"><time=
 class=3D"post-full-meta-date" datetime=3D"2018-06-27">27 June 2018</time>
<span class=3D"date-divider">/</span> <a href=3D"https://codewithhugo.com/t=
ags/javascript/">#JavaScript</a>&nbsp;<a href=3D"https://codewithhugo.com/t=
ags/express/">#Express</a>&nbsp;</section><h1 class=3D"post-full-title">Tes=
ting an Express app with SuperTest, moxios and Jest</h1></header><div class=
=3D"hero-container"><figure class=3D"post-full-image" style=3D"background-i=
mage:url(https://codewithhugo.com/testing-an-express-app-with-supertest-mox=
ios-and-jest/bekir-donmez-unsplash_hu1b70a0026307992934f1dc9b7f65dacb_58291=
_0x800_resize_q60_box.jpg)"></figure></div><section class=3D"post-full-cont=
ent"><div class=3D"kg-card-markdown"><p>Testing is a crucial part of the so=
ftware development process.
It helps to catch bugs, avoid regressions and to document the behaviour of =
a piece of software.</p><p>Express is one of the most widespread libraries =
for building backend applications in JavaScript.
What follows is a summary of how to set up an efficient unit testing strate=
gy for such an application as well as
a couple of situations you may be faced with when attempting to test.</p><p=
>Full code example can be found at <a href=3D"https://github.com/HugoDF/exp=
ress-supertest-moxios">https://github.com/HugoDF/express-supertest-moxios</=
a>.</p></div><details style=3D"cursor:pointer"><summary>Table of Contents</=
summary><nav id=3D"TableOfContents"><ul><li><ul><li><a href=3D"https://code=
withhugo.com/testing-an-express-app-with-supertest-moxios-and-jest/#a-simpl=
e-express-app">A simple Express app =F0=9F=8E=81</a><ul><li><a href=3D"http=
s://codewithhugo.com/testing-an-express-app-with-supertest-moxios-and-jest/=
#testing-strategy">Testing strategy =F0=9F=95=B5=EF=B8=8F=E2=80=8D</a></li>=
</ul></li><li><a href=3D"https://codewithhugo.com/testing-an-express-app-wi=
th-supertest-moxios-and-jest/#testing-a-less-simple-express-app">Testing a =
less simple Express app =F0=9F=93=9A</a><ul><li><a href=3D"https://codewith=
hugo.com/testing-an-express-app-with-supertest-moxios-and-jest/#testing-str=
ategy-1">Testing strategy =F0=9F=9B=A0</a></li><li><a href=3D"https://codew=
ithhugo.com/testing-an-express-app-with-supertest-moxios-and-jest/#where-re=
dis-gets-mocked">Where Redis gets mocked =F0=9F=A4=A1</a></li></ul></li><li=
><a href=3D"https://codewithhugo.com/testing-an-express-app-with-supertest-=
moxios-and-jest/#parting-thoughts">Parting thoughts =F0=9F=A6=8B</a></li></=
ul></li></ul></nav></details><div class=3D"kg-card-markdown"><blockquote><p=
>This was sent out on the <a href=3D"https://buttondown.email/hugo">Code wi=
th Hugo newsletter</a> on Monday.
<a href=3D"https://buttondown.email/hugo">Subscribe</a> to get the latest p=
osts right in your inbox (before anyone else).</p></blockquote><h2 id=3D"a-=
simple-express-app">A simple Express app =F0=9F=8E=81</h2><p>Say we have an=
 Express set of route handlers like the following:</p><p><code>hugo.js</cod=
e>:</p><div class=3D"highlight"><pre class=3D"chroma"><code class=3D"langua=
ge-js" data-lang=3D"js"><span class=3D"k">const</span> <span class=3D"p">{<=
/span><span class=3D"nx">Router</span><span class=3D"p">}</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</sp=
an><span class=3D"s1">'express'</span><span class=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">axios</span> <span class=
=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</spa=
n><span class=3D"s1">'axios'</span><span class=3D"p">);</span>
<span class=3D"nx">module</span><span class=3D"p">.</span><span class=3D"nx=
">exports</span> <span class=3D"o">=3D</span> <span class=3D"p">(</span><sp=
an class=3D"nx">router</span> <span class=3D"o">=3D</span> <span class=3D"k=
">new</span> <span class=3D"nx">Router</span><span class=3D"p">())</span> <=
span class=3D"p">=3D&gt;</span> <span class=3D"p">{</span>
  <span class=3D"nx">router</span><span class=3D"p">.</span><span class=3D"=
nx">get</span><span class=3D"p">(</span><span class=3D"s1">'/hugo'</span><s=
pan class=3D"p">,</span> <span class=3D"kr">async</span> <span class=3D"p">=
(</span><span class=3D"nx">req</span><span class=3D"p">,</span> <span class=
=3D"nx">res</span><span class=3D"p">)</span> <span class=3D"p">=3D&gt;</spa=
n> <span class=3D"p">{</span>
    <span class=3D"k">const</span> <span class=3D"p">{</span> <span class=
=3D"nx">data</span><span class=3D"o">:</span> <span class=3D"nx">userData</=
span> <span class=3D"p">}</span> <span class=3D"o">=3D</span> <span class=
=3D"kr">await</span> <span class=3D"nx">axios</span><span class=3D"p">.</sp=
an><span class=3D"nx">get</span><span class=3D"p">(</span>
      <span class=3D"s1">'https://api.github.com/users/HugoDF'</span>
    <span class=3D"p">);</span>
    <span class=3D"k">const</span> <span class=3D"p">{</span>
      <span class=3D"nx">blog</span><span class=3D"p">,</span>
      <span class=3D"nx">location</span><span class=3D"p">,</span>
      <span class=3D"nx">bio</span><span class=3D"p">,</span>
      <span class=3D"nx">public_repos</span><span class=3D"p">,</span>
    <span class=3D"p">}</span> <span class=3D"o">=3D</span> <span class=3D"=
nx">userData</span>
    <span class=3D"k">return</span> <span class=3D"nx">res</span><span clas=
s=3D"p">.</span><span class=3D"nx">json</span><span class=3D"p">({</span>
      <span class=3D"nx">blog</span><span class=3D"p">,</span>
      <span class=3D"nx">location</span><span class=3D"p">,</span>
      <span class=3D"nx">bio</span><span class=3D"p">,</span>
      <span class=3D"nx">publicRepos</span><span class=3D"o">:</span> <span=
 class=3D"nx">public_repos</span><span class=3D"p">,</span>
    <span class=3D"p">});</span>
  <span class=3D"p">});</span>
  <span class=3D"k">return</span> <span class=3D"nx">router</span><span cla=
ss=3D"p">;</span>
<span class=3D"p">};</span>
</code></pre></div><p>This would be consumed in a main <code>server.js</cod=
e> like so:</p><div class=3D"highlight"><pre class=3D"chroma"><code class=
=3D"language-js" data-lang=3D"js"><span class=3D"k">const</span> <span clas=
s=3D"nx">express</span> <span class=3D"o">=3D</span> <span class=3D"nx">req=
uire</span><span class=3D"p">(</span><span class=3D"s1">'express'</span><sp=
an class=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">app</span> <span class=3D=
"o">=3D</span> <span class=3D"nx">express</span><span class=3D"p">();</span=
>
<span class=3D"k">const</span> <span class=3D"nx">hugo</span> <span class=
=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</spa=
n><span class=3D"s1">'./hugo'</span><span class=3D"p">);</span>

<span class=3D"nx">app</span><span class=3D"p">.</span><span class=3D"nx">u=
se</span><span class=3D"p">(</span><span class=3D"nx">hugo</span><span clas=
s=3D"p">());</span>

<span class=3D"nx">app</span><span class=3D"p">.</span><span class=3D"nx">l=
isten</span><span class=3D"p">(</span><span class=3D"mi">3000</span><span c=
lass=3D"p">,</span> <span class=3D"p">()</span> <span class=3D"p">=3D&gt;</=
span> <span class=3D"p">{</span>
  <span class=3D"nx">console</span><span class=3D"p">.</span><span class=3D=
"nx">log</span><span class=3D"p">(</span><span class=3D"sb">`Server listeni=
ng on port 3000`</span><span class=3D"p">);</span>
<span class=3D"p">});</span>
</code></pre></div><p>For this to run, the following dependencies are requi=
red:</p><div class=3D"highlight"><pre class=3D"chroma"><code class=3D"langu=
age-js" data-lang=3D"js"><span class=3D"nx">npm</span> <span class=3D"nx">i=
</span> <span class=3D"o">--</span><span class=3D"nx">save</span> <span cla=
ss=3D"nx">express</span> <span class=3D"nx">axios</span>
</code></pre></div><p>And it can be run using:</p><div class=3D"highlight">=
<pre class=3D"chroma"><code class=3D"language-js" data-lang=3D"js"><span cl=
ass=3D"nx">node</span> <span class=3D"nx">server</span><span class=3D"p">.<=
/span><span class=3D"nx">js</span>
</code></pre></div><p>Hitting <code>/hugo</code> will return some JSON data=
 pulled from my GitHub profile:</p><pre><code>curl http://localhost:3000/hu=
go
{"blog":"https://codewithhugo.com","location":"London","bio":"Developer, Ja=
vaScript.","publicRepos":39}
</code></pre><h3 id=3D"testing-strategy">Testing strategy =F0=9F=95=B5=EF=
=B8=8F=E2=80=8D</h3><p>Testing is about defining some inputs and asserting =
on the outputs.</p><p>Now if we skip the chat about what a unit of test is,=
 what we really care about with this API is that
when we hit <code>/hugo</code> we get the right response, using <code>jest<=
/code> here=E2=80=99s what a test suite might look like:</p><p><code>hugo.t=
est.js</code></p><div class=3D"highlight"><pre class=3D"chroma"><code class=
=3D"language-js" data-lang=3D"js"><span class=3D"k">const</span> <span clas=
s=3D"nx">hugo</span> <span class=3D"o">=3D</span> <span class=3D"nx">requir=
e</span><span class=3D"p">(</span><span class=3D"s1">'./hugo'</span><span c=
lass=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">express</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</sp=
an><span class=3D"s1">'express'</span><span class=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">moxios</span> <span class=
=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</spa=
n><span class=3D"s1">'moxios'</span><span class=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">request</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</sp=
an><span class=3D"s1">'supertest'</span><span class=3D"p">);</span>

<span class=3D"k">const</span> <span class=3D"nx">initHugo</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"p">()</span> <span class=3D"p">=3D&gt;</=
span> <span class=3D"p">{</span>
  <span class=3D"k">const</span> <span class=3D"nx">app</span> <span class=
=3D"o">=3D</span> <span class=3D"nx">express</span><span class=3D"p">();</s=
pan>
  <span class=3D"nx">app</span><span class=3D"p">.</span><span class=3D"nx"=
>use</span><span class=3D"p">(</span><span class=3D"nx">hugo</span><span cl=
ass=3D"p">());</span>
  <span class=3D"k">return</span> <span class=3D"nx">app</span><span class=
=3D"p">;</span>
<span class=3D"p">}</span>

<span class=3D"nx">describe</span><span class=3D"p">(</span><span class=3D"=
s1">'GET /hugo'</span><span class=3D"p">,</span> <span class=3D"p">()</span=
> <span class=3D"p">=3D&gt;</span> <span class=3D"p">{</span>
  <span class=3D"nx">beforeEach</span><span class=3D"p">(()</span> <span cl=
ass=3D"p">=3D&gt;</span> <span class=3D"p">{</span>
    <span class=3D"nx">moxios</span><span class=3D"p">.</span><span class=
=3D"nx">install</span><span class=3D"p">();</span>
  <span class=3D"p">});</span>
  <span class=3D"nx">afterEach</span><span class=3D"p">(()</span> <span cla=
ss=3D"p">=3D&gt;</span> <span class=3D"p">{</span>
    <span class=3D"nx">moxios</span><span class=3D"p">.</span><span class=
=3D"nx">uninstall</span><span class=3D"p">();</span>
  <span class=3D"p">});</span>
  <span class=3D"nx">test</span><span class=3D"p">(</span><span class=3D"s1=
">'It should fetch HugoDF from GitHub'</span><span class=3D"p">,</span> <sp=
an class=3D"kr">async</span> <span class=3D"p">()</span> <span class=3D"p">=
=3D&gt;</span> <span class=3D"p">{</span>
    <span class=3D"nx">moxios</span><span class=3D"p">.</span><span class=
=3D"nx">stubRequest</span><span class=3D"p">(</span><span class=3D"sr">/api=
.github.com\/users/</span><span class=3D"p">,</span> <span class=3D"p">{</s=
pan>
      <span class=3D"nx">status</span><span class=3D"o">:</span> <span clas=
s=3D"mi">200</span><span class=3D"p">,</span>
      <span class=3D"nx">response</span><span class=3D"o">:</span> <span cl=
ass=3D"p">{</span>
        <span class=3D"nx">blog</span><span class=3D"o">:</span> <span clas=
s=3D"s1">'https://codewithhugo.com'</span><span class=3D"p">,</span>
        <span class=3D"nx">location</span><span class=3D"o">:</span> <span =
class=3D"s1">'London'</span><span class=3D"p">,</span>
        <span class=3D"nx">bio</span><span class=3D"o">:</span> <span class=
=3D"s1">'Developer, JavaScript'</span><span class=3D"p">,</span>
        <span class=3D"nx">public_repos</span><span class=3D"o">:</span> <s=
pan class=3D"mi">39</span><span class=3D"p">,</span>
      <span class=3D"p">}</span>
    <span class=3D"p">});</span>
    <span class=3D"k">const</span> <span class=3D"nx">app</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nx">initHugo</span><span class=3D"p">();<=
/span>
    <span class=3D"kr">await</span> <span class=3D"nx">request</span><span =
class=3D"p">(</span><span class=3D"nx">app</span><span class=3D"p">).</span=
><span class=3D"nx">get</span><span class=3D"p">(</span><span class=3D"s1">=
'/hugo'</span><span class=3D"p">);</span>
    <span class=3D"nx">expect</span><span class=3D"p">(</span><span class=
=3D"nx">moxios</span><span class=3D"p">.</span><span class=3D"nx">requests<=
/span><span class=3D"p">.</span><span class=3D"nx">mostRecent</span><span c=
lass=3D"p">().</span><span class=3D"nx">url</span><span class=3D"p">).</spa=
n><span class=3D"nx">toBe</span><span class=3D"p">(</span><span class=3D"s1=
">'https://api.github.com/users/HugoDF'</span><span class=3D"p">);</span>
  <span class=3D"p">});</span>
  <span class=3D"nx">test</span><span class=3D"p">(</span><span class=3D"s1=
">'It should 200 and return a transformed version of GitHub response'</span=
><span class=3D"p">,</span> <span class=3D"kr">async</span> <span class=3D"=
p">()</span> <span class=3D"p">=3D&gt;</span> <span class=3D"p">{</span>
    <span class=3D"nx">moxios</span><span class=3D"p">.</span><span class=
=3D"nx">stubRequest</span><span class=3D"p">(</span><span class=3D"sr">/api=
.github.com\/users/</span><span class=3D"p">,</span> <span class=3D"p">{</s=
pan>
      <span class=3D"nx">status</span><span class=3D"o">:</span> <span clas=
s=3D"mi">200</span><span class=3D"p">,</span>
      <span class=3D"nx">response</span><span class=3D"o">:</span> <span cl=
ass=3D"p">{</span>
        <span class=3D"nx">blog</span><span class=3D"o">:</span> <span clas=
s=3D"s1">'https://codewithhugo.com'</span><span class=3D"p">,</span>
        <span class=3D"nx">location</span><span class=3D"o">:</span> <span =
class=3D"s1">'London'</span><span class=3D"p">,</span>
        <span class=3D"nx">bio</span><span class=3D"o">:</span> <span class=
=3D"s1">'Developer, JavaScript'</span><span class=3D"p">,</span>
        <span class=3D"nx">public_repos</span><span class=3D"o">:</span> <s=
pan class=3D"mi">39</span><span class=3D"p">,</span>
      <span class=3D"p">}</span>
    <span class=3D"p">});</span>
    <span class=3D"k">const</span> <span class=3D"nx">app</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nx">initHugo</span><span class=3D"p">();<=
/span>
    <span class=3D"k">const</span> <span class=3D"nx">res</span> <span clas=
s=3D"o">=3D</span> <span class=3D"kr">await</span> <span class=3D"nx">reque=
st</span><span class=3D"p">(</span><span class=3D"nx">app</span><span class=
=3D"p">).</span><span class=3D"nx">get</span><span class=3D"p">(</span><spa=
n class=3D"s1">'/hugo'</span><span class=3D"p">);</span>
    <span class=3D"nx">expect</span><span class=3D"p">(</span><span class=
=3D"nx">res</span><span class=3D"p">.</span><span class=3D"nx">body</span><=
span class=3D"p">).</span><span class=3D"nx">toEqual</span><span class=3D"p=
">({</span>
      <span class=3D"nx">blog</span><span class=3D"o">:</span> <span class=
=3D"s1">'https://codewithhugo.com'</span><span class=3D"p">,</span>
        <span class=3D"nx">location</span><span class=3D"o">:</span> <span =
class=3D"s1">'London'</span><span class=3D"p">,</span>
        <span class=3D"nx">bio</span><span class=3D"o">:</span> <span class=
=3D"s1">'Developer, JavaScript'</span><span class=3D"p">,</span>
        <span class=3D"nx">publicRepos</span><span class=3D"o">:</span> <sp=
an class=3D"mi">39</span><span class=3D"p">,</span>
    <span class=3D"p">});</span>
  <span class=3D"p">});</span>
<span class=3D"p">});</span>
</code></pre></div><p>To run the above, first of all, add the required depe=
ndencies:</p><pre><code>npm install --save-dev jest moxios supertest
</code></pre><p>Run tests with:</p><pre><code>npx jest
</code></pre><p>We=E2=80=99re leveraging <a href=3D"https://github.com/visi=
onmedia/supertest">SuperTest</a> and passing the express app to it.
SuperTest=E2=80=99s fetch-like API is familiar and is <code>await</code>-ab=
le.</p><p><a href=3D"https://github.com/axios/moxios">moxios</a> is a packa=
ge to =E2=80=9Cmock axios requests for testing=E2=80=9D.
We=E2=80=99re able to run our unit tests in watch mode without flooding the=
 upstream REST API.
<code>moxios</code> needs to be installed and uninstalled, we do this befor=
e and after each test respectively.
This is to avoid an edge case where one failing test can make others fail d=
ue to moxios isn=E2=80=99t torn down and re-set up properly if
the error occurs before <code>moxios.uninstall</code> is called.</p><p>The =
<code>stubRequest</code> method should be passed 2 parameters:</p><ul><li>T=
he first is what is going to be intercepted, this can be a string (which wi=
ll need to be a full URL),
or a Regular Expression.</li><li>The second parameter is a response config =
object, the main keys we use are <code>status</code> and <code>response</co=
de>.
Status will be the status in the <code>axios</code> fetch response and <cod=
e>response</code> will be the <code>data</code> in the <code>axios</code> f=
etch response.</li></ul><h2 id=3D"testing-a-less-simple-express-app">Testin=
g a less simple Express app =F0=9F=93=9A</h2><p>Let=E2=80=99s say we have a=
n app that=E2=80=99s a blob store, backed by Redis (a simple key-value stor=
e amongst other things):</p><p><code>blob-store.js</code>:</p><div class=3D=
"highlight"><pre class=3D"chroma"><code class=3D"language-js" data-lang=3D"=
js"><span class=3D"k">const</span> <span class=3D"p">{</span><span class=3D=
"nx">Router</span><span class=3D"p">}</span> <span class=3D"o">=3D</span> <=
span class=3D"nx">require</span><span class=3D"p">(</span><span class=3D"s1=
">'router'</span><span class=3D"p">);</span>

<span class=3D"nx">module</span><span class=3D"p">.</span><span class=3D"nx=
">exports</span> <span class=3D"o">=3D</span> <span class=3D"p">(</span><sp=
an class=3D"nx">redisClient</span><span class=3D"p">,</span> <span class=3D=
"nx">router</span> <span class=3D"o">=3D</span> <span class=3D"k">new</span=
> <span class=3D"nx">Router</span><span class=3D"p">())</span> <span class=
=3D"p">=3D&gt;</span> <span class=3D"p">{</span>
  <span class=3D"nx">router</span><span class=3D"p">.</span><span class=3D"=
nx">get</span><span class=3D"p">(</span><span class=3D"s1">'/store/:key'</s=
pan><span class=3D"p">,</span> <span class=3D"kr">async</span> <span class=
=3D"p">(</span><span class=3D"nx">req</span><span class=3D"p">,</span> <spa=
n class=3D"nx">res</span><span class=3D"p">)</span> <span class=3D"p">=3D&g=
t;</span> <span class=3D"p">{</span>
    <span class=3D"k">const</span> <span class=3D"p">{</span> <span class=
=3D"nx">key</span> <span class=3D"p">}</span> <span class=3D"o">=3D</span> =
<span class=3D"nx">req</span><span class=3D"p">.</span><span class=3D"nx">p=
arams</span><span class=3D"p">;</span>
    <span class=3D"k">const</span> <span class=3D"nx">value</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"nx">req</span><span class=3D"p">.</span=
><span class=3D"nx">query</span><span class=3D"p">;</span>
    <span class=3D"kr">await</span> <span class=3D"nx">redisClient</span><s=
pan class=3D"p">.</span><span class=3D"nx">setAsync</span><span class=3D"p"=
>(</span><span class=3D"nx">key</span><span class=3D"p">,</span> <span clas=
s=3D"nx">JSON</span><span class=3D"p">.</span><span class=3D"nx">stringify<=
/span><span class=3D"p">(</span><span class=3D"nx">value</span><span class=
=3D"p">));</span>
    <span class=3D"k">return</span> <span class=3D"nx">res</span><span clas=
s=3D"p">.</span><span class=3D"nx">send</span><span class=3D"p">(</span><sp=
an class=3D"s1">'Success'</span><span class=3D"p">);</span>
  <span class=3D"p">});</span>
  <span class=3D"nx">router</span><span class=3D"p">.</span><span class=3D"=
nx">get</span><span class=3D"p">(</span><span class=3D"s1">'/:key'</span><s=
pan class=3D"p">,</span> <span class=3D"kr">async</span> <span class=3D"p">=
(</span><span class=3D"nx">req</span><span class=3D"p">,</span> <span class=
=3D"nx">res</span><span class=3D"p">)</span> <span class=3D"p">=3D&gt;</spa=
n> <span class=3D"p">{</span>
    <span class=3D"k">const</span> <span class=3D"p">{</span> <span class=
=3D"nx">key</span> <span class=3D"p">}</span> <span class=3D"o">=3D</span> =
<span class=3D"nx">req</span><span class=3D"p">.</span><span class=3D"nx">p=
arams</span><span class=3D"p">;</span>
    <span class=3D"k">const</span> <span class=3D"nx">rawData</span> <span =
class=3D"o">=3D</span> <span class=3D"kr">await</span> <span class=3D"nx">r=
edisClient</span><span class=3D"p">.</span><span class=3D"nx">getAsync</spa=
n><span class=3D"p">(</span><span class=3D"nx">key</span><span class=3D"p">=
);</span>
    <span class=3D"k">return</span> <span class=3D"nx">res</span><span clas=
s=3D"p">.</span><span class=3D"nx">json</span><span class=3D"p">(</span><sp=
an class=3D"nx">JSON</span><span class=3D"p">.</span><span class=3D"nx">par=
se</span><span class=3D"p">(</span><span class=3D"nx">rawData</span><span c=
lass=3D"p">));</span>
  <span class=3D"p">});</span>
  <span class=3D"k">return</span> <span class=3D"nx">router</span><span cla=
ss=3D"p">;</span>
<span class=3D"p">};</span>
</code></pre></div><p><code>server.js</code>:</p><div class=3D"highlight"><=
pre class=3D"chroma"><code class=3D"language-js" data-lang=3D"js"><span cla=
ss=3D"k">const</span> <span class=3D"nx">express</span> <span class=3D"o">=
=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</span><span=
 class=3D"s1">'express'</span><span class=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">app</span> <span class=3D=
"o">=3D</span> <span class=3D"nx">express</span><span class=3D"p">();</span=
>

<span class=3D"c1">// For the sake of simplicity,=20
</span><span class=3D"c1">// redisClient isn't in another module
</span><span class=3D"c1"></span><span class=3D"k">const</span> <span class=
=3D"nx">redis</span> <span class=3D"o">=3D</span> <span class=3D"nx">requir=
e</span><span class=3D"p">(</span><span class=3D"s1">'redis'</span><span cl=
ass=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"p">{</span><span class=3D"nx"=
>promisify</span><span class=3D"p">}</span> <span class=3D"o">=3D</span> <s=
pan class=3D"nx">require</span><span class=3D"p">(</span><span class=3D"s1"=
>'util'</span><span class=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">client</span> <span class=
=3D"o">=3D</span> <span class=3D"nx">redis</span><span class=3D"p">.</span>=
<span class=3D"nx">createClient</span><span class=3D"p">(</span><span class=
=3D"nx">process</span><span class=3D"p">.</span><span class=3D"nx">env</spa=
n><span class=3D"p">.</span><span class=3D"nx">REDIS_URL</span><span class=
=3D"p">);</span>

<span class=3D"k">const</span> <span class=3D"nx">redisClient</span> <span =
class=3D"o">=3D</span> <span class=3D"p">{</span>
  <span class=3D"nx">getAsync</span><span class=3D"o">:</span> <span class=
=3D"nx">promisify</span><span class=3D"p">(</span><span class=3D"nx">client=
</span><span class=3D"p">.</span><span class=3D"nx">get</span><span class=
=3D"p">).</span><span class=3D"nx">bind</span><span class=3D"p">(</span><sp=
an class=3D"nx">client</span><span class=3D"p">),</span>
  <span class=3D"nx">setAsync</span><span class=3D"o">:</span> <span class=
=3D"nx">promisify</span><span class=3D"p">(</span><span class=3D"nx">client=
</span><span class=3D"p">.</span><span class=3D"nx">set</span><span class=
=3D"p">).</span><span class=3D"nx">bind</span><span class=3D"p">(</span><sp=
an class=3D"nx">client</span><span class=3D"p">)</span>
<span class=3D"p">};</span>

<span class=3D"k">const</span> <span class=3D"nx">hugo</span> <span class=
=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</spa=
n><span class=3D"s1">'./hugo'</span><span class=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">blobStore</span> <span cl=
ass=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</=
span><span class=3D"s1">'./blob-store'</span><span class=3D"p">);</span>

<span class=3D"nx">app</span><span class=3D"p">.</span><span class=3D"nx">u=
se</span><span class=3D"p">(</span><span class=3D"nx">hugo</span><span clas=
s=3D"p">());</span>
<span class=3D"nx">app</span><span class=3D"p">.</span><span class=3D"nx">u=
se</span><span class=3D"p">(</span><span class=3D"nx">blobStore</span><span=
 class=3D"p">(</span><span class=3D"nx">redisClient</span><span class=3D"p"=
>));</span>

<span class=3D"nx">app</span><span class=3D"p">.</span><span class=3D"nx">l=
isten</span><span class=3D"p">(</span><span class=3D"mi">3000</span><span c=
lass=3D"p">,</span> <span class=3D"p">()</span> <span class=3D"p">=3D&gt;</=
span> <span class=3D"p">{</span>
  <span class=3D"nx">console</span><span class=3D"p">.</span><span class=3D=
"nx">log</span><span class=3D"p">(</span><span class=3D"sb">`Server listeni=
ng on port 3000`</span><span class=3D"p">);</span>
<span class=3D"p">});</span>
</code></pre></div><p>For a walkthrough of the example of the above, see <a=
 href=3D"https://codewithhugo.com/setting-up-express-and-redis-with-docker-=
compose#creating-a-blob-store">Setting up Express and Redis with Docker com=
pose</a>.</p><p>To get it up and running:</p><ul><li>clone <a href=3D"https=
://github.com/HugoDF/express-supertest-moxios">https://github.com/HugoDF/ex=
press-supertest-moxios</a></li><li>have <a href=3D"https://www.docker.com/c=
ommunity-edition">Docker Community Edition</a> running</li><li>run <code>do=
cker-compose up</code></li></ul><p>Once the app is running, we can do the f=
ollowing:</p><ol><li>Store some data:
<code>curl http://localhost:3000/store/my-key\?some\=3Dvalue\&amp;some-othe=
r\=3Dother-value
Success</code></li><li>Retrieve that data:
<code>curl http://localhost:3000/my-key
{
"some": "value",
"some-other": "other-value"
}</code></li></ol><h3 id=3D"testing-strategy-1">Testing strategy =F0=9F=9B=
=A0</h3><p>We have a decision to make here:</p><ol><li>Mock Redis</li><li>D=
on=E2=80=99t mock Redis</li></ol><p>To not mock Redis would mean running a =
full Redis instance and setting up some test data before each test suite.
This means you=E2=80=99re relying on some sort of ordering of tests and you=
 can=E2=80=99t parallelise without running multiple Redis instances to avoi=
d data issues.</p><p>For unit(ish) tests, that we want to be running the wh=
ole time we=E2=80=99re developing, this is an issue.
The alternative is to mock Redis, specifically, <code>redisClient</code>.</=
p><h3 id=3D"where-redis-gets-mocked">Where Redis gets mocked =F0=9F=A4=A1</=
h3><p><code>blob-store.test.js</code></p><div class=3D"highlight"><pre clas=
s=3D"chroma"><code class=3D"language-js" data-lang=3D"js"><span class=3D"k"=
>const</span> <span class=3D"nx">blobStore</span> <span class=3D"o">=3D</sp=
an> <span class=3D"nx">require</span><span class=3D"p">(</span><span class=
=3D"s1">'./blob-store'</span><span class=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">express</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</sp=
an><span class=3D"s1">'express'</span><span class=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">moxios</span> <span class=
=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</spa=
n><span class=3D"s1">'moxios'</span><span class=3D"p">);</span>
<span class=3D"k">const</span> <span class=3D"nx">request</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nx">require</span><span class=3D"p">(</sp=
an><span class=3D"s1">'supertest'</span><span class=3D"p">);</span>

<span class=3D"k">const</span> <span class=3D"nx">initBlobStore</span> <spa=
n class=3D"o">=3D</span> <span class=3D"p">(</span>
  <span class=3D"nx">mockRedisClient</span> <span class=3D"o">=3D</span> <s=
pan class=3D"p">{</span>
    <span class=3D"nx">getAsync</span><span class=3D"o">:</span> <span clas=
s=3D"nx">jest</span><span class=3D"p">.</span><span class=3D"nx">fn</span><=
span class=3D"p">(()</span> <span class=3D"p">=3D&gt;</span> <span class=3D=
"nb">Promise</span><span class=3D"p">.</span><span class=3D"nx">resolve</sp=
an><span class=3D"p">()),</span>
    <span class=3D"nx">setAsync</span><span class=3D"o">:</span> <span clas=
s=3D"nx">jest</span><span class=3D"p">.</span><span class=3D"nx">fn</span><=
span class=3D"p">(()</span> <span class=3D"p">=3D&gt;</span> <span class=3D=
"nb">Promise</span><span class=3D"p">.</span><span class=3D"nx">resolve</sp=
an><span class=3D"p">())</span>
  <span class=3D"p">}</span>
<span class=3D"p">)</span> <span class=3D"p">=3D&gt;</span> <span class=3D"=
p">{</span>
  <span class=3D"k">const</span> <span class=3D"nx">app</span> <span class=
=3D"o">=3D</span> <span class=3D"nx">express</span><span class=3D"p">();</s=
pan>
  <span class=3D"nx">app</span><span class=3D"p">.</span><span class=3D"nx"=
>use</span><span class=3D"p">(</span><span class=3D"nx">blobStore</span><sp=
an class=3D"p">(</span><span class=3D"nx">mockRedisClient</span><span class=
=3D"p">));</span>
  <span class=3D"k">return</span> <span class=3D"nx">app</span><span class=
=3D"p">;</span>
<span class=3D"p">}</span>

<span class=3D"nx">describe</span><span class=3D"p">(</span><span class=3D"=
s1">'GET /store/:key with params'</span><span class=3D"p">,</span> <span cl=
ass=3D"p">()</span> <span class=3D"p">=3D&gt;</span> <span class=3D"p">{</s=
pan>
  <span class=3D"nx">test</span><span class=3D"p">(</span><span class=3D"s1=
">'It should call redisClient.setAsync with key route parameter as key and =
stringified params as value'</span><span class=3D"p">,</span> <span class=
=3D"kr">async</span> <span class=3D"p">()</span> <span class=3D"p">=3D&gt;<=
/span> <span class=3D"p">{</span>
    <span class=3D"k">const</span> <span class=3D"nx">mockRedisClient</span=
> <span class=3D"o">=3D</span> <span class=3D"p">{</span>
      <span class=3D"nx">setAsync</span><span class=3D"o">:</span> <span cl=
ass=3D"nx">jest</span><span class=3D"p">.</span><span class=3D"nx">fn</span=
><span class=3D"p">(()</span> <span class=3D"p">=3D&gt;</span> <span class=
=3D"nb">Promise</span><span class=3D"p">.</span><span class=3D"nx">resolve<=
/span><span class=3D"p">())</span>
    <span class=3D"p">};</span>
    <span class=3D"k">const</span> <span class=3D"nx">app</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nx">initBlobStore</span><span class=3D"p"=
>(</span><span class=3D"nx">mockRedisClient</span><span class=3D"p">);</spa=
n>
    <span class=3D"kr">await</span> <span class=3D"nx">request</span><span =
class=3D"p">(</span><span class=3D"nx">app</span><span class=3D"p">).</span=
><span class=3D"nx">get</span><span class=3D"p">(</span><span class=3D"s1">=
'/store/my-key?hello=3Dworld&amp;foo=3Dbar'</span><span class=3D"p">);</spa=
n>
    <span class=3D"nx">expect</span><span class=3D"p">(</span><span class=
=3D"nx">mockRedisClient</span><span class=3D"p">.</span><span class=3D"nx">=
setAsync</span><span class=3D"p">).</span><span class=3D"nx">toHaveBeenCall=
edWith</span><span class=3D"p">(</span>
      <span class=3D"s1">'my-key'</span><span class=3D"p">,</span>
      <span class=3D"s1">'{\"hello\":\"world\",\"foo\":\"bar\"}'</span>
    <span class=3D"p">);</span>
  <span class=3D"p">});</span>
<span class=3D"p">});</span>

<span class=3D"nx">describe</span><span class=3D"p">(</span><span class=3D"=
s1">'GET /:key'</span><span class=3D"p">,</span> <span class=3D"p">()</span=
> <span class=3D"p">=3D&gt;</span> <span class=3D"p">{</span>
  <span class=3D"nx">test</span><span class=3D"p">(</span><span class=3D"s1=
">'It should call redisClient.getAsync with key route parameter as key'</sp=
an><span class=3D"p">,</span> <span class=3D"kr">async</span> <span class=
=3D"p">()</span> <span class=3D"p">=3D&gt;</span> <span class=3D"p">{</span=
>
    <span class=3D"k">const</span> <span class=3D"nx">mockRedisClient</span=
> <span class=3D"o">=3D</span> <span class=3D"p">{</span>
      <span class=3D"nx">getAsync</span><span class=3D"o">:</span> <span cl=
ass=3D"nx">jest</span><span class=3D"p">.</span><span class=3D"nx">fn</span=
><span class=3D"p">(()</span> <span class=3D"p">=3D&gt;</span> <span class=
=3D"nb">Promise</span><span class=3D"p">.</span><span class=3D"nx">resolve<=
/span><span class=3D"p">(</span><span class=3D"s1">'{}'</span><span class=
=3D"p">))</span>
    <span class=3D"p">};</span>
    <span class=3D"k">const</span> <span class=3D"nx">app</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nx">initBlobStore</span><span class=3D"p"=
>(</span><span class=3D"nx">mockRedisClient</span><span class=3D"p">);</spa=
n>
    <span class=3D"kr">await</span> <span class=3D"nx">request</span><span =
class=3D"p">(</span><span class=3D"nx">app</span><span class=3D"p">).</span=
><span class=3D"nx">get</span><span class=3D"p">(</span><span class=3D"s1">=
'/my-key'</span><span class=3D"p">);</span>
    <span class=3D"nx">expect</span><span class=3D"p">(</span><span class=
=3D"nx">mockRedisClient</span><span class=3D"p">.</span><span class=3D"nx">=
setAsync</span><span class=3D"p">).</span><span class=3D"nx">toHaveBeenCall=
edWith</span><span class=3D"p">(</span>
      <span class=3D"s1">'my-key'</span><span class=3D"p">,</span>
    <span class=3D"p">);</span>
  <span class=3D"p">});</span>
  <span class=3D"nx">test</span><span class=3D"p">(</span><span class=3D"s1=
">'It should return output of redisClient.getAsync with key route parameter=
 as key'</span><span class=3D"p">,</span> <span class=3D"kr">async</span> <=
span class=3D"p">()</span> <span class=3D"p">=3D&gt;</span> <span class=3D"=
p">{</span>
    <span class=3D"k">const</span> <span class=3D"nx">mockRedisClient</span=
> <span class=3D"o">=3D</span> <span class=3D"p">{</span>
      <span class=3D"nx">getAsync</span><span class=3D"o">:</span> <span cl=
ass=3D"nx">jest</span><span class=3D"p">.</span><span class=3D"nx">fn</span=
><span class=3D"p">(()</span> <span class=3D"p">=3D&gt;</span> <span class=
=3D"nb">Promise</span><span class=3D"p">.</span><span class=3D"nx">resolve<=
/span><span class=3D"p">(</span><span class=3D"s1">'{}'</span><span class=
=3D"p">))</span>
    <span class=3D"p">};</span>
    <span class=3D"k">const</span> <span class=3D"nx">app</span> <span clas=
s=3D"o">=3D</span> <span class=3D"nx">initBlobStore</span><span class=3D"p"=
>(</span><span class=3D"nx">mockRedisClient</span><span class=3D"p">);</spa=
n>
    <span class=3D"k">const</span> <span class=3D"nx">response</span> <span=
 class=3D"o">=3D</span> <span class=3D"kr">await</span> <span class=3D"nx">=
request</span><span class=3D"p">(</span><span class=3D"nx">app</span><span =
class=3D"p">).</span><span class=3D"nx">get</span><span class=3D"p">(</span=
><span class=3D"s1">'/my-key'</span><span class=3D"p">);</span>
    <span class=3D"nx">expect</span><span class=3D"p">(</span><span class=
=3D"nx">response</span><span class=3D"p">.</span><span class=3D"nx">body</s=
pan><span class=3D"p">).</span><span class=3D"nx">toEqual</span><span class=
=3D"p">({});</span>
  <span class=3D"p">});</span>
<span class=3D"p">});</span>
</code></pre></div><p>In short we set up our tests so we can pass an arbitr=
ary <code>redisClient</code> object where we can mock the methods themselve=
s.</p><h2 id=3D"parting-thoughts">Parting thoughts =F0=9F=A6=8B</h2><p>Test=
ing an Express app is all about finding the boundary at which the mocking s=
tarts and where it stops.</p><p>This is an excercise in API design, how to =
test things in as large a unit as it makes sense to (eg. the whole endpoint=
),
without having to carry around the baggage of a full database/persistence l=
ayer.</p><p>For example, another approach to the Redis client tests would h=
ave been to create a mock client that maintains the
state somehow (ie writes to an object internally), and to inject/inspect th=
at state (before and after the code under test respectively).</p><p>For the=
 full code example, see <a href=3D"https://github.com/HugoDF/express-supert=
est-moxios">https://github.com/HugoDF/express-supertest-moxios</a>.</p><p>C=
over photo <a href=3D"https://unsplash.com/photos/eofm5R5f9Kw?utm_source=3D=
unsplash&amp;utm_medium=3Dreferral&amp;utm_content=3DcreditCopyText">Bekir =
D=C3=B6nmez</a> on <a href=3D"https://unsplash.com/search/photos/clowns?utm=
_source=3Dunsplash&amp;utm_medium=3Dreferral&amp;utm_content=3DcreditCopyTe=
xt">Unsplash</a></p></div></section><section class=3D"subscribe-form"><h3 c=
lass=3D"subscribe-form-title">Get Testing Superpowers with these Underused =
Jest Features</h3><p>Subscribe for free resources that turbocharge your Jes=
t tests and a discount on the "Advanced Jest Handbook"</p><form action=3D"h=
ttps://buttondown.email/api/emails/embed-subscribe/hugo" method=3D"post" ta=
rget=3D"popupwindow"><div class=3D"form-group"><input class=3D"subscribe-em=
ail" type=3D"email" name=3D"email" id=3D"bd-email" placeholder=3D"youremail=
@example.com">
</div><button class=3D"js-cta" data-cta-event=3D"newsletter_form" value=3D"=
Subscribe" type=3D"submit">Learn Jest</button></form></section><section cla=
ss=3D"triplebyte-cta"><p class=3D"cta-text">Looking for a new job? Take Tri=
plebyte=E2=80=99s <a href=3D"https://triplebyte.com/a/XRbO1AU/d">quiz</a> a=
nd have top tech companies pitch you!</p></section><footer class=3D"post-fu=
ll-footer"><section class=3D"author-card"><img class=3D"author-profile-imag=
e" src=3D"https://codewithhugo.com/img/hugo_small.jpeg" alt=3D"Author"><sec=
tion class=3D"author-card-content"><h4 class=3D"author-card-name"><a href=
=3D"https://codewithhugo.com/">Hugo Di Francesco</a></h4><p>A Software Engi=
neer who is big on Node.js, queues and Vue(s). Co-author of "Professional J=
avaScript" with Packt. He shares practical JavaScript tips for the develope=
r who wants to get things done on Code with Hugo. University College London=
 (UCL), MEng Mathematical Computation Graduate.</p></section></section></fo=
oter></article><section class=3D"overlay-cta"><div class=3D"overlay-cta__in=
ner"><div class=3D"overlay-cta__text-container"><h3 class=3D"cta-title over=
lay-cta__title">Get Testing Superpowers with these Underused Jest Features<=
/h3><p class=3D"cta-text overlay-cta__text">Subscribe for free resources th=
at turbocharge your Jest tests and a discount on the "Advanced Jest Handboo=
k"</p></div><div class=3D"overlay-cta__button-container"><a href=3D"https:/=
/buttondown.email/hugo" class=3D"button overlay-cta__button js-cta" data-ct=
a-event=3D"newsletter_cta">Learn Jest</a>
<a href=3D"https://codewithhugo.com/testing-an-express-app-with-supertest-m=
oxios-and-jest/#" class=3D"overlay-cta__close">close</a></div></div></secti=
on></div></main><aside class=3D"read-next outer"><div class=3D"inner"><div =
class=3D"read-next-feed"><article class=3D"read-next-card" style=3D"backgro=
und-image:url(https://codewithhugo.com/img/cover.jpg)"><header class=3D"rea=
d-next-card-header"><small class=3D"read-next-card-header-sitetitle">=E2=80=
=94 Code with Hugo =E2=80=94</small><h3 class=3D"read-next-card-header-titl=
e"><a href=3D"https://codewithhugo.com/tags/javascript/">#JavaScript</a></h=
3></header><div class=3D"read-next-divider"><svg xmlns=3D"http://www.w3.org=
/2000/svg" viewBox=3D"0 0 24 24"><path d=3D"M13 14.5s2 3 5 3 5.5-2.463 5.5-=
5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 =
3.5 4.5 3.5"></path></svg></div><div class=3D"read-next-card-content"><ul><=
li><a href=3D"https://codewithhugo.com/a-tiny-case-study-about-migrating-to=
-netlify-when-disaster-strikes-at-github-featuring-cloudflare/">A tiny case=
 study about migrating to Netlify when disaster strikes at GitHub, featurin=
g Cloudflare</a></li><li><a href=3D"https://codewithhugo.com/simple-zeit-mi=
cro-improve-node/">Simple, but not too simple: how using Zeit=E2=80=99s `mi=
cro` improves your Node applications</a></li><li><a href=3D"https://codewit=
hhugo.com/abusing-jest-snapshot-tests-some-nice-use-cases-/">When to use Je=
st snapshot tests: comprehensive use-cases and examples =F0=9F=93=B8</a></l=
i><li><a href=3D"https://codewithhugo.com/bring-redux-to-your-queue-logic-a=
n-express-setup-with-es6-and-bull-queue/">Bring Redux to your queue logic: =
an Express setup with ES6 and bull queue</a></li></ul></div><footer class=
=3D"read-next-card-footer"><a href=3D"https://codewithhugo.com/tags/javascr=
ipt/">See all related posts =E2=86=92</a></footer></article><article class=
=3D"post-card post"><a class=3D"post-card-image-link" href=3D"https://codew=
ithhugo.com/responsive-semantic-images-with-css/"><div class=3D"post-card-i=
mage" style=3D"background-image:url(https://codewithhugo.com/responsive-sem=
antic-images-with-css/nate-bell-unsplash_hu4373584623a1c14afa1cede73ef625a0=
_253935_0x300_resize_q60_box.jpg)"></div></a><div class=3D"post-card-conten=
t"><a class=3D"post-card-content-link" href=3D"https://codewithhugo.com/res=
ponsive-semantic-images-with-css/"><header class=3D"post-card-header"><span=
 class=3D"post-card-tags">#CSS
#tip
#accessibility</span><h2 class=3D"post-card-title">Responsive, semantic ima=
ges with CSS</h2></header><section class=3D"post-card-excerpt"><p>CSS tip: =
object-fit your images.
To have an image that doesn=E2=80=99t try to stretch to its width/height th=
e classic CSS is as follows:
...</p></section></a><footer class=3D"post-card-meta"><img class=3D"author-=
profile-image" src=3D"https://codewithhugo.com/img/hugo_small.jpeg" alt=3D"=
Author">
<span class=3D"post-card-author"><a href=3D"https://codewithhugo.com/">Hugo=
 Di Francesco</a></span></footer></div></article><article class=3D"post-car=
d post"><a class=3D"post-card-image-link" href=3D"https://codewithhugo.com/=
how-to-make-beautiful-simple-cli-apps-with-node/"><div class=3D"post-card-i=
mage" style=3D"background-image:url(https://codewithhugo.com/how-to-make-be=
autiful-simple-cli-apps-with-node/cli-screenshot_hu0145fe68288e4ee5a9114ca5=
bc9a109b_30699_0x300_resize_q60_box.jpeg)"></div></a><div class=3D"post-car=
d-content"><a class=3D"post-card-content-link" href=3D"https://codewithhugo=
.com/how-to-make-beautiful-simple-cli-apps-with-node/"><header class=3D"pos=
t-card-header"><span class=3D"post-card-tags">#Node
#JavaScript
#CLI</span><h2 class=3D"post-card-title">How to make beautiful, simple CLI =
apps with Node</h2></header><section class=3D"post-card-excerpt"><p>Channel=
 your inner Sindre Sohrus and ship a beautifully simple CLI app using Node.
Command line apps are a neat way to package repetitive tasks. This will wal=
k you through some tools that are useful to build CLI apps.
...</p></section></a><footer class=3D"post-card-meta"><img class=3D"author-=
profile-image" src=3D"https://codewithhugo.com/img/hugo_small.jpeg" alt=3D"=
Author">
<span class=3D"post-card-author"><a href=3D"https://codewithhugo.com/">Hugo=
 Di Francesco</a></span></footer></div></article></div></div></aside><div c=
lass=3D"floating-header floating-active"><div class=3D"floating-header-logo=
"><a href=3D"https://codewithhugo.com/"><span>Code with Hugo</span></a></di=
v><span class=3D"floating-header-divider">=E2=80=94</span><div class=3D"flo=
ating-header-title">Testing an Express app with SuperTest, moxios and Jest<=
/div><div class=3D"floating-header-share"><div class=3D"floating-header-sha=
re-label">Share this<svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 =
0 24 24"><path d=3D"M7.5 15.5V4a1.5 1.5.0 1 1 3 0v4.5h2a1 1 0 0 1 1 1h2a1 1=
 0 0 1 1 1H18a1.5 1.5.0 0 1 1.5 1.5v3.099c0 .929-.13 1.854-.385 2.748L17.5 =
23.5h-9c-1.5-2-5.417-8.673-5.417-8.673a1.2 1.2.0 0 1 1.76-1.605L7.5 15.5zm6=
-6v2m-3-3.5v3.5m6-1v2"></path></svg></div><a class=3D"floating-header-share=
-tw" href=3D"https://twitter.com/share?text=3D%22Testing%20an%20Express%20a=
pp%20with%20SuperTest%2c%20moxios%20and%20Jest%22%20by%20%40hugo__df&amp;ur=
l=3Dhttps%3a%2f%2fcodewithhugo.com%2ftesting-an-express-app-with-supertest-=
moxios-and-jest%2f&amp;"><svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 32 32"><path d=3D"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v=
.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088.0 0 1-2.063 4.438c-.875 1.4=
38-2 2.688-3.25 3.813a15.015 15.015.0 0 1-4.625 2.563c-1.813.688-3.75 1-5.7=
5 1-3.25.0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688.0 5.063-.=
875 7.188-2.5-1.25.0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.0=
63.813.125 1.125.125.5.0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.=
673 5.673.0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228.=
0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75.0-1.063.25-2.063.75-2.938 1.438=
 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579.0 0 1 1.5-5=
.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48.0 =
0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3=
.313-.875z"></path></svg></a><a class=3D"floating-header-share-fb" href=3D"=
https://www.facebook.com/sharer/sharer.php?u=3Dhttps%3a%2f%2fcodewithhugo.c=
om%2ftesting-an-express-app-with-supertest-moxios-and-jest%2f"><svg xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 32 32"><path d=3D"M19 6h5V0h=
-5c-3.86.0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z"></path>=
</svg></a></div><progress class=3D"progress" value=3D"4500" max=3D"11304"><=
div class=3D"progress-container"><span class=3D"progress-bar"></span></div>=
</progress></div><footer class=3D"site-footer outer"><div class=3D"site-foo=
ter-content inner"><section class=3D"copyright" style=3D"line-height:1.3em"=
><a href=3D"https://codewithhugo.com/">Code with Hugo</a><br></section><nav=
 class=3D"site-footer-nav"><a href=3D"https://codewithhugo.com/">Latest Pos=
ts</a>
<a href=3D"https://twitter.com/hugo__df" target=3D"_blank" rel=3D"noopener"=
>Twitter</a>
<a href=3D"https://github.com/HugoDF" target=3D"_blank" rel=3D"noopener">Gi=
thub</a>
<a href=3D"https://medium.com/@hugo__df" target=3D"_blank" rel=3D"noopener"=
>Medium</a></nav></div></footer></div></body></html>
------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-829b8610-b64e-4256-952f-9bbe0b234bcf@mhtml.blink

@charset "utf-8";

a, abbr, acronym, address, applet, article, aside, audio, big, blockquote, =
body, canvas, caption, cite, code, dd, del, details, dfn, div, dl, dt, em, =
embed, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, =
header, hgroup, html, iframe, img, ins, kbd, label, legend, li, mark, menu,=
 nav, object, ol, output, p, pre, q, ruby, s, samp, section, small, span, s=
trike, strong, sub, summary, sup, table, tbody, td, tfoot, th, thead, time,=
 tr, tt, ul, var, video { margin: 0px; padding: 0px; border: 0px; font-styl=
e: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inhe=
rit; line-height: inherit; font-family: inherit; font-size: 100%; vertical-=
align: baseline; }

body { line-height: 1; }

ol, ul { list-style: none; }

blockquote, q { quotes: none; }

blockquote::after, blockquote::before, q::after, q::before { content: none;=
 }

img { max-width: 100%; }

html { box-sizing: border-box; font-family: sans-serif; text-size-adjust: 1=
00%; }

*, ::after, ::before { box-sizing: inherit; }

a { background-color: transparent; }

a:active, a:hover { outline: 0px; }

b, strong { font-weight: 700; }

dfn, em, i { font-style: italic; }

h1 { margin: 0.67em 0px; font-size: 2em; }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

mark { background-color: rgb(253, 255, 182); }

code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

button, input, optgroup, select, textarea { margin: 0px; color: inherit; fo=
nt: inherit; }

button { overflow: visible; border: none; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { cursor: pointer; -webkit-appearance: button; }

button[disabled], html input[disabled] { cursor: default; }

input { line-height: normal; }

input:focus { outline: none; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { height: auto; }

input[type=3D"search"] { box-sizing: content-box; -webkit-appearance: textf=
ield; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { -webkit-appearance: none; }

legend { padding: 0px; border: 0px; }

textarea { overflow: auto; }

table { border-spacing: 0px; border-collapse: collapse; }

td, th { padding: 0px; }

html { overflow-y: scroll; font-size: 62.5%; -webkit-tap-highlight-color: r=
gba(0, 0, 0, 0); }

body, html { overflow-x: hidden; }

body { color: rgb(60, 72, 78); font-family: -apple-system, BlinkMacSystemFo=
nt, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica =
Neue", sans-serif; font-size: 1.5rem; line-height: 1.6em; font-weight: 400;=
 font-style: normal; letter-spacing: 0px; text-rendering: optimizelegibilit=
y; background: rgb(255, 255, 255); -webkit-font-smoothing: antialiased; }

::selection { text-shadow: none; background: rgb(203, 234, 251); }

hr { position: relative; display: block; width: 100%; margin: 2.5em 0px 3.5=
em; padding: 0px; height: 1px; border-width: 1px 0px 0px; border-right-styl=
e: initial; border-bottom-style: initial; border-left-style: initial; borde=
r-right-color: initial; border-bottom-color: initial; border-left-color: in=
itial; border-image: initial; border-top-style: solid; border-top-color: rg=
b(227, 233, 237); }

audio, canvas, iframe, img, svg, video { vertical-align: middle; }

fieldset { margin: 0px; padding: 0px; border: 0px; }

textarea { resize: vertical; }

blockquote, dl, ol, p, ul { margin: 0px 0px 1.5em; }

ol, ul { padding-left: 1.3em; padding-right: 1.5em; }

ol ol, ol ul, ul ol, ul ul { margin: 0.5em 0px 1em; }

ul { list-style: disc; }

ol { list-style: decimal; }

li { margin: 0.5em 0px; padding-left: 0.3em; line-height: 1.6em; }

dt { float: left; margin: 0px 20px 0px 0px; width: 120px; color: rgb(21, 23=
, 26); font-weight: 500; text-align: right; }

dd { margin: 0px 0px 5px; text-align: left; }

blockquote { margin: 1.5em 0px; padding: 0px 1.6em; border-left: 0.5em soli=
d rgb(229, 239, 245); }

blockquote p { margin: 0.8em 0px; font-size: 1.2em; font-weight: 300; }

blockquote small { display: inline-block; margin: 0.8em 0px 0.8em 1.5em; fo=
nt-size: 0.9em; opacity: 0.8; }

blockquote small::before { content: "=E2=80=94=C2=A0"; }

blockquote cite { font-weight: 700; }

blockquote cite a { font-weight: 400; }

a { color: rgb(38, 168, 237); text-decoration: none; }

a:hover { text-decoration: underline; }

h1, h2, h3, h4, h5, h6 { margin-top: 0px; line-height: 1.15; font-weight: 7=
00; text-rendering: optimizelegibility; }

h1 { margin: 0px 0px 0.5em; font-size: 5rem; font-weight: 700; }

@media (max-width: 500px) {
  h1 { font-size: 2.2rem; }
}

h2 { margin: 1.5em 0px 0.5em; font-size: 2rem; }

@media (max-width: 500px) {
  h2 { font-size: 1.8rem; }
}

h3 { margin: 1.5em 0px 0.5em; font-size: 1.8rem; font-weight: 500; }

@media (max-width: 500px) {
  h3 { font-size: 1.7rem; }
}

h4 { margin: 1.5em 0px 0.5em; font-size: 1.6rem; font-weight: 500; }

h5, h6 { margin: 1.5em 0px 0.5em; font-size: 1.4rem; font-weight: 500; }

body { background: rgb(244, 248, 251); }

.img { display: block; width: 100%; height: 100%; background-position: 50% =
center; background-size: cover; border-radius: 100%; }

.hidden { visibility: hidden; position: absolute; text-indent: -9999px; }

.site-wrapper { display: flex; flex-direction: column; min-height: 100vh; }

.site-main { z-index: 100; flex-grow: 1; }

.outer { position: relative; padding: 0px 4vw; }

.inner { margin: 0px auto; max-width: 1040px; width: 100%; }

@media (min-width: 900px) {
  .author-template .post-feed, .home-template .post-feed, .tag-template .po=
st-feed { margin-top: -70px; padding-top: 0px; }
  .home-template .site-nav { position: relative; top: -70px; }
}

.site-header { position: relative; padding-top: 12px; padding-bottom: 12px;=
 color: rgb(255, 255, 255); background: 50% center / cover no-repeat rgb(9,=
 10, 11); }

.site-header::before { bottom: 0px; background: rgba(0, 0, 0, 0.18); }

.site-header::after, .site-header::before { content: ""; position: absolute=
; top: 0px; right: 0px; left: 0px; z-index: 10; display: block; }

.site-header::after { bottom: auto; height: 80px; background: linear-gradie=
nt(rgba(0, 0, 0, 0.1), transparent); }

.site-header.no-cover::after, .site-header.no-cover::before { display: none=
; }

.site-header-content { display: flex; flex-direction: column; justify-conte=
nt: center; align-items: center; padding: 10vw 4vw; min-height: 200px; max-=
height: 450px; text-align: center; }

.site-title { z-index: 10; margin: 0px; padding: 0px; font-size: 3.8rem; fo=
nt-weight: 700; }

.site-logo { max-height: 45px; }

.site-description { z-index: 10; margin: 0px; padding: 5px 0px; font-size: =
2.2rem; font-weight: 300; letter-spacing: 0.5px; opacity: 0.8; }

@media (max-width: 500px) {
  .site-title { font-size: 3rem; }
  .site-description { font-size: 1.8rem; }
}

.site-nav { position: relative; z-index: 300; justify-content: space-betwee=
n; align-items: flex-start; height: 40px; font-size: 1.2rem; }

.site-nav, .site-nav-left { display: flex; overflow-y: hidden; }

.site-nav-left { align-items: center; overflow-x: auto; margin-right: 10px;=
 padding-bottom: 80px; letter-spacing: 0.4px; white-space: nowrap; }

.site-nav-logo { flex-shrink: 0; display: block; margin-right: 24px; paddin=
g: 11px 0px; color: rgb(255, 255, 255); font-size: 1.7rem; line-height: 1em=
; font-weight: 700; letter-spacing: -0.5px; }

.site-nav-logo:hover { text-decoration: none; }

.site-nav-logo img { display: block; width: auto; height: 21px; }

.nav { display: flex; margin: 0px 0px 0px -12px; padding: 0px; list-style: =
none; }

.nav li { padding: 0px; text-transform: uppercase; }

.nav li, .nav li a { display: block; margin: 0px; }

.nav li a { padding: 10px 12px; color: rgb(255, 255, 255); opacity: 0.8; }

.nav li a:hover { text-decoration: none; opacity: 1; }

.site-nav-right { height: 40px; }

.site-nav-right, .social-links { flex-shrink: 0; display: flex; align-items=
: center; }

.social-links a:last-of-type { padding-right: 20px; }

.social-link { display: flex; justify-content: center; align-items: center;=
 margin: 0px; padding: 10px; color: rgb(255, 255, 255); opacity: 0.8; }

.social-link:hover { opacity: 1; }

.social-link svg { height: 1.8rem; fill: rgb(255, 255, 255); }

.social-link-fb svg { height: 1.5rem; }

.social-link-wb svg { height: 1.6rem; }

.social-link-wb svg path { stroke: rgb(255, 255, 255); }

.social-link-rss svg { height: 1.9rem; }

.subscribe-button { display: block; padding: 4px 10px; border: 1px solid rg=
b(255, 255, 255); color: rgb(255, 255, 255); font-size: 1.2rem; line-height=
: 1em; border-radius: 10px; opacity: 0.8; }

.subscribe-button:hover { text-decoration: none; opacity: 1; }

.rss-button { opacity: 0.8; }

.rss-button:hover { opacity: 1; }

.rss-button svg { margin-bottom: 1px; height: 2.1rem; fill: rgb(255, 255, 2=
55); }

@media (max-width: 700px) {
  .site-header { padding-right: 0px; padding-left: 0px; }
  .site-nav-left { margin-right: 0px; padding-left: 4vw; }
  .site-nav-right { display: none; }
}

.post-feed { position: relative; flex-wrap: wrap; margin: 0px -20px; paddin=
g: 40px 0px 0px; }

.post-card, .post-feed { display: flex; }

.post-card { flex: 1 1 300px; flex-direction: column; overflow: hidden; mar=
gin: 0px 20px 40px; min-height: 300px; background: 50% center / cover rgb(2=
55, 255, 255); border-radius: 5px; box-shadow: rgba(39, 44, 49, 0.06) 8px 1=
4px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px; transition: all 0.5s ease 0s;=
 }

.post-card:hover { box-shadow: rgba(39, 44, 49, 0.1) 0px 0px 1px, rgba(39, =
44, 49, 0.07) 0px 3px 16px; transition: all 0.3s ease 0s; transform: transl=
ate3d(0px, -1px, 0px); }

.post-card-image-link { position: relative; display: block; overflow: hidde=
n; border-radius: 5px 5px 0px 0px; }

.post-card-image { width: auto; height: 200px; background: 50% center / cov=
er no-repeat rgb(197, 210, 217); }

.post-card-content-link { position: relative; display: block; padding: 25px=
 25px 0px; color: rgb(21, 23, 26); }

.post-card-content-link:hover { text-decoration: none; }

.post-card-tags { display: block; margin-bottom: 4px; color: rgb(115, 138, =
148); font-size: 1.2rem; line-height: 1.15em; font-weight: 500; letter-spac=
ing: 0.5px; text-transform: uppercase; }

.post-card-title { margin-top: 0px; }

.post-card-content { flex-grow: 1; display: flex; flex-direction: column; j=
ustify-content: space-between; }

.post-card-excerpt { font-family: Georgia, serif; }

.post-card-meta { padding: 0px 25px 25px; }

.author-profile-image { margin-right: 5px; width: 25px; height: 25px; borde=
r-radius: 100%; object-fit: cover; }

.post-card-author { font-size: 1.3rem; font-weight: 500; letter-spacing: 0.=
5px; text-transform: uppercase; }

@media (min-width: 795px) {
  .home-template .post-feed .post-card:nth-child(6n+1):not(.no-image) { fle=
x: 1 1 100%; flex-direction: row; }
  .home-template .post-feed .post-card:nth-child(6n+1):not(.no-image) .post=
-card-image-link { position: relative; flex: 1 1 auto; border-radius: 5px 0=
px 0px 5px; }
  .home-template .post-feed .post-card:nth-child(6n+1):not(.no-image) .post=
-card-image { position: absolute; width: 100%; height: 100%; }
  .home-template .post-feed .post-card:nth-child(6n+1):not(.no-image) .post=
-card-content { flex: 0 1 357px; }
  .home-template .post-feed .post-card:nth-child(6n+1):not(.no-image) h2 { =
font-size: 2.6rem; }
  .home-template .post-feed .post-card:nth-child(6n+1):not(.no-image) p { f=
ont-size: 1.8rem; line-height: 1.55em; }
  .home-template .post-feed .post-card:nth-child(6n+1):not(.no-image) .post=
-card-content-link { padding: 30px 40px 0px; }
  .home-template .post-feed .post-card:nth-child(6n+1):not(.no-image) .post=
-card-meta { padding: 0px 40px 30px; }
}

.home-template .site-header::after { display: none; }

@media (max-width: 650px) {
  .post-feed { padding-top: 5vw; }
  .post-card { margin: 0px 20px 5vw; }
}

.page-template .site-main, .post-template .site-main { padding-bottom: 4vw;=
 background: rgb(255, 255, 255); }

.post-full { position: relative; z-index: 50; }

.post-full-header { margin: 0px auto; padding: 6vw 3vw 3vw; max-width: 1040=
px; text-align: center; }

@media (max-width: 500px) {
  .post-full-header { padding: 14vw 3vw 10vw; }
}

.post-full-meta { display: flex; justify-content: center; align-items: cent=
er; color: rgb(115, 138, 148); font-size: 1.4rem; font-weight: 600; text-tr=
ansform: uppercase; }

.post-full-meta-date { color: rgb(62, 176, 239); }

.post-full-title { margin: 0px; color: rgb(9, 10, 11); }

.date-divider { display: inline-block; margin: 0px 6px 1px; }

.post-full-image { margin: 0px -10vw -165px; height: 800px; background: 50%=
 center / cover rgb(197, 210, 217); border-radius: 5px; }

@media (max-width: 1170px) {
  .post-full-image { margin: 0px -4vw -100px; height: 600px; border-radius:=
 0px; }
}

@media (max-width: 800px) {
  .post-full-image { height: 400px; }
}

.post-full-content { position: relative; margin: 0px auto; padding: 70px 10=
0px 0px; min-height: 230px; font-family: Georgia, serif; font-size: 2.2rem;=
 line-height: 1.6em; background: rgb(255, 255, 255); }

@media (max-width: 1170px) {
  .post-full-content { padding: 5vw 7vw 0px; }
}

@media (max-width: 800px) {
  .post-full-content { font-size: 1.9rem; }
}

.post-full-content::before { left: -5px; transform: rotate(-5deg); }

.post-full-content::after, .post-full-content::before { content: ""; positi=
on: absolute; top: 15px; z-index: -1; display: block; width: 20px; height: =
200px; background: rgba(39, 44, 49, 0.15); filter: blur(5px); }

.post-full-content::after { right: -5px; transform: rotate(5deg); }

.no-image .post-full-content { padding-top: 0px; }

.no-image .post-full-content::after, .no-image .post-full-content::before {=
 display: none; }

.kg-card-markdown { display: flex; flex-direction: column; align-items: cen=
ter; max-width: 920px; }

.footnotes, .post-full-comments, .post-full-content blockquote, .post-full-=
content dl, .post-full-content h1, .post-full-content h2, .post-full-conten=
t h3, .post-full-content h4, .post-full-content h5, .post-full-content h6, =
.post-full-content ol, .post-full-content p, .post-full-content pre, .post-=
full-content ul { min-width: 100%; }

.post-full-content li { word-break: break-word; }

.post-full-content li p { margin: 0px; }

.post-template .kg-card-markdown > p:first-child { font-size: 1.25em; line-=
height: 1.5em; }

.post-full-content a { color: rgb(0, 0, 0); box-shadow: rgb(62, 176, 239) 0=
px -1px 0px inset; }

.post-full-content a:hover { color: rgb(62, 176, 239); text-decoration: non=
e; }

.post-full-content em, .post-full-content strong { color: rgb(9, 10, 11); }

.post-full-content small { display: inline-block; line-height: 1.6em; }

.post-full-content li:first-child { margin-top: 0px; }

.post-full-content img, .post-full-content video { display: block; margin: =
1.5em auto; max-width: 1040px; }

@media (max-width: 1040px) {
  .post-full-content img, .post-full-content video { width: 100%; }
}

.post-full-content img[src$=3D"#full"] { max-width: none; width: 100vw; }

.post-full-content img + br + small { display: block; margin-top: -3em; mar=
gin-bottom: 1.5em; }

.post-full-content iframe { margin: 0px auto; }

.post-full-content blockquote { margin: 0px 0px 1.5em; padding: 0px 1.5em; =
border-left: 3px solid rgb(62, 176, 239); }

.post-full-content blockquote p { margin: 0px 0px 1em; color: inherit; font=
-size: inherit; line-height: inherit; font-style: italic; }

.post-full-content blockquote p:last-child { margin-bottom: 0px; }

.post-full-content code { padding: 0px 5px 2px; font-size: 0.8em; line-heig=
ht: 1em; background: rgb(229, 239, 245); border-radius: 3px; font-weight: 4=
00 !important; }

.post-full-content pre { overflow-x: auto; margin: 1.5em 0px 3em; padding: =
20px; max-width: 100%; border: 1px solid rgb(0, 0, 0); color: rgb(229, 239,=
 245); font-size: 1.4rem; line-height: 1.5em; background: rgb(14, 15, 17); =
border-radius: 5px; }

.post-full-content pre code { padding: 0px; font-size: inherit; line-height=
: inherit; background: transparent; }

.post-full-content pre code * { color: inherit; }

.post-full-content .fluid-width-video-wrapper { margin: 1.5em 0px 3em; }

.post-full-content hr { margin: 4vw 0px; }

.post-full-content hr::after { content: ""; position: absolute; top: -15px;=
 left: 50%; display: block; margin-left: -10px; width: 1px; height: 30px; b=
ackground: rgb(227, 233, 237); box-shadow: rgb(255, 255, 255) 0px 0px 0px 5=
px; transform: rotate(45deg); }

.post-full-content h1, .post-full-content h2, .post-full-content h3, .post-=
full-content h4, .post-full-content h5, .post-full-content h6 { color: rgb(=
9, 10, 11); font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Rob=
oto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif; =
}

.post-full-content h1 { margin: 0.5em 0px 0.2em; font-size: 4.6rem; font-we=
ight: 700; }

@media (max-width: 500px) {
  .post-full-content h1 { font-size: 2.8rem; }
}

.post-full-content h2 { margin: 0.5em 0px 0.2em; font-size: 3.6rem; font-we=
ight: 700; }

@media (max-width: 500px) {
  .post-full-content h2 { font-size: 2.6rem; }
}

.post-full-content h3 { margin: 0.5em 0px 0.2em; font-size: 2.8rem; font-we=
ight: 700; }

@media (max-width: 500px) {
  .post-full-content h3 { font-size: 2.2rem; }
}

.post-full-content h4 { margin: 0.5em 0px 0.2em; font-size: 2.8rem; font-we=
ight: 700; }

@media (max-width: 500px) {
  .post-full-content h4 { font-size: 2.2rem; }
}

.post-full-content h5 { display: block; margin: 0.5em 0px; padding: 1em 0px=
 1.5em; border: 0px; color: rgb(62, 176, 239); font-family: Georgia, serif;=
 font-size: 3.2rem; line-height: 1.35em; text-align: center; }

@media (min-width: 1180px) {
  .post-full-content h5 { max-width: 1060px; width: 100vw; }
}

@media (max-width: 500px) {
  .post-full-content h5 { padding: 0px 0px 0.5em; font-size: 2.2rem; }
}

.post-full-content h6 { margin: 0.5em 0px 0.2em; font-size: 2.3rem; font-we=
ight: 700; }

@media (max-width: 500px) {
  .post-full-content h6 { font-size: 2rem; }
}

.footnotes-sep { margin-bottom: 30px; }

.footnotes { font-size: 1.5rem; }

.footnotes p { margin: 0px; }

.footnote-backref { font-size: 1.2rem; font-weight: 700; color: rgb(62, 176=
, 239) !important; text-decoration: none !important; box-shadow: none !impo=
rtant; }

@media (max-width: 500px) {
  .post-full-meta { font-size: 1.2rem; line-height: 1.3em; }
  .post-full-title { font-size: 2.9rem; }
  .post-full-image { margin-bottom: 4vw; height: 350px; }
  .post-full-content { padding: 0px; }
  .post-full-content::after, .post-full-content::before { display: none; }
}

.post-full-content table { display: inline-block; overflow-x: auto; margin:=
 0.5em 0px 2.5em; max-width: 100%; width: auto; border-spacing: 0px; border=
-collapse: collapse; font-family: -apple-system, BlinkMacSystemFont, "Segoe=
 UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", san=
s-serif; font-size: 1.6rem; white-space: nowrap; vertical-align: top; backg=
round: radial-gradient(at left center, rgba(0, 0, 0, 0.2) 0px, transparent =
75%) 0px center / 10px 100% no-repeat scroll, radial-gradient(at right cent=
er, rgba(0, 0, 0, 0.2) 0px, transparent 75%) 100% center / 10px 100% scroll=
; }

.post-full-content table td:first-child { background-image: linear-gradient=
(90deg, rgb(255, 255, 255) 50%, rgba(255, 255, 255, 0)); background-size: 2=
0px 100%; background-repeat: no-repeat; }

.post-full-content table td:last-child { background-image: linear-gradient(=
270deg, rgb(255, 255, 255) 50%, rgba(255, 255, 255, 0)); background-positio=
n: 100% 0px; background-size: 20px 100%; background-repeat: no-repeat; }

.post-full-content table th { color: rgb(21, 23, 26); font-size: 1.2rem; fo=
nt-weight: 700; letter-spacing: 0.2px; text-align: left; text-transform: up=
percase; background-color: rgb(244, 248, 251); }

.post-full-content table td, .post-full-content table th { padding: 6px 12p=
x; border: 1px solid rgb(227, 236, 243); }

.subscribe-form { margin: 1.5em 0px; padding: 6.5vw 7vw 7vw; border: 1px so=
lid rgb(237, 244, 248); text-align: center; background: rgb(244, 248, 251);=
 border-radius: 7px; }

.subscribe-form-title { margin: 0px 0px 3px; padding: 0px; color: rgb(21, 2=
3, 26); font-size: 3.5rem; line-height: 1; font-weight: 700; }

.subscribe-form p { margin-bottom: 1em; color: rgb(115, 138, 148); font-siz=
e: 2.2rem; line-height: 1.55em; letter-spacing: 0.2px; }

.subscribe-form form { display: flex; justify-content: center; align-items:=
 center; margin: 0px auto; max-width: 420px; }

.subscribe-form .form-group { flex-grow: 1; }

.subscribe-email { display: block; padding: 10px; width: 100%; border: 1px =
solid rgb(218, 226, 231); color: rgb(115, 138, 148); font-size: 1.8rem; lin=
e-height: 1em; font-weight: 400; user-select: text; border-radius: 5px; tra=
nsition: border-color 0.15s linear 0s; -webkit-appearance: none; }

.subscribe-form button { display: inline-block; margin: 0px 0px 0px 10px; p=
adding: 0px 20px; height: 41px; outline: none; color: rgb(255, 255, 255); f=
ont-size: 1.5rem; line-height: 37px; font-weight: 400; text-align: center; =
text-shadow: rgba(0, 0, 0, 0.1) 0px -1px 0px; background: linear-gradient(r=
gb(79, 183, 240), rgb(41, 160, 224) 60%, rgb(41, 160, 224) 90%, rgb(54, 166=
, 226)); border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.14) 0px 0px 0px 1p=
x inset; -webkit-font-smoothing: subpixel-antialiased; }

.subscribe-form button:active, .subscribe-form button:focus { background: r=
gb(32, 156, 223); }

@media (max-width: 650px) {
  .subscribe-form-title { font-size: 2.4rem; }
  .subscribe-form p { font-size: 1.6rem; }
}

@media (max-width: 500px) {
  .subscribe-form form { flex-direction: column; }
  .subscribe-form .form-group { width: 100%; }
  .subscribe-form button { margin: 10px 0px 0px; width: 100%; }
}

.post-full-footer { justify-content: space-between; margin: 0px auto; paddi=
ng: 3vw 0px 6vw; max-width: 840px; }

.author-card, .post-full-footer { display: flex; align-items: center; }

.author-card .author-profile-image { margin-right: 15px; width: 60px; heigh=
t: 60px; }

.author-card-name { margin: 0px 0px 2px; padding: 0px; font-size: 2rem; }

.author-card-name a { color: rgb(21, 23, 26); font-weight: 700; }

.author-card-name a:hover { text-decoration: none; }

.author-card-content p { margin: 0px; color: rgb(115, 138, 148); line-heigh=
t: 1.3em; }

.post-full-footer-right { flex-shrink: 0; margin-left: 20px; }

.author-card-button { display: block; padding: 9px 16px; border: 1px solid =
rgb(174, 187, 193); color: rgb(115, 138, 148); font-size: 1.2rem; line-heig=
ht: 1; font-weight: 500; border-radius: 20px; transition: all 0.2s ease 0s;=
 }

.author-card-button:hover { border-color: rgb(62, 176, 239); color: rgb(62,=
 176, 239); text-decoration: none; }

.post-full-comments { margin: 0px auto; max-width: 840px; }

.read-next-feed { flex-wrap: wrap; margin: 0px -20px; padding: 40px 0px 0px=
; }

.read-next-card, .read-next-feed { display: flex; }

.read-next-card { position: relative; flex: 1 1 300px; flex-direction: colu=
mn; overflow: hidden; margin: 0px 20px 40px; padding: 25px; color: rgb(255,=
 255, 255); background: 50% center / cover rgb(21, 23, 26); border-radius: =
5px; box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.0=
3) 1px 3px 8px; }

.read-next-card::before { content: ""; position: absolute; top: 0px; right:=
 0px; bottom: 0px; left: 0px; display: block; background: linear-gradient(1=
35deg, rgba(0, 40, 60, 0.8), rgba(0, 20, 40, 0.7)); border-radius: 5px; bac=
kdrop-filter: blur(2px); }

.read-next-card-header { position: relative; z-index: 50; padding-top: 20px=
; text-align: center; }

.read-next-card-header-sitetitle { display: block; font-size: 1.3rem; line-=
height: 1.3em; opacity: 0.8; }

.read-next-card-header-title { margin: 0px; padding: 0px 20px; color: rgb(2=
55, 255, 255); font-size: 3rem; line-height: 1.2em; letter-spacing: 1px; }

.read-next-card-header-title a { color: rgb(255, 255, 255); font-weight: 30=
0; text-decoration: none; }

.read-next-card-header-title a:hover { text-decoration: none; }

.read-next-divider { position: relative; display: flex; justify-content: ce=
nter; height: 80px; }

.read-next-divider svg { width: 40px; fill: transparent; stroke: rgb(255, 2=
55, 255); stroke-width: 0.5px; stroke-opacity: 0.65; }

.read-next-card-content { position: relative; z-index: 50; flex-grow: 1; di=
splay: flex; font-size: 1.7rem; }

.read-next-card-content ul { display: flex; flex-direction: column; margin:=
 0px auto; padding: 0px; text-align: center; list-style: none; }

.read-next-card-content li { margin: 0px; padding: 0px; font-size: 1.6rem; =
line-height: 1.25em; font-weight: 200; letter-spacing: -0.5px; }

.read-next-card-content li a { display: block; padding: 20px 0px; border-bo=
ttom: 1px solid rgba(255, 255, 255, 0.3); color: rgb(255, 255, 255); font-w=
eight: 500; vertical-align: top; transition: opacity 0.3s ease 0s; }

.read-next-card-content li:first-of-type a { padding-top: 10px; }

.read-next-card-content li a:hover { opacity: 1; }

.read-next-card-footer { position: relative; margin: 15px 0px 3px; text-ali=
gn: center; }

.read-next-card-footer a { color: rgb(255, 255, 255); }

.floating-header { visibility: hidden; position: fixed; top: 0px; right: 0p=
x; left: 0px; z-index: 1000; display: flex; align-items: center; height: 60=
px; border-bottom: 1px solid rgba(0, 0, 0, 0.06); background: rgba(255, 255=
, 255, 0.95); transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1) 0s; trans=
form: translate3d(0px, -120%, 0px); }

.floating-active { visibility: visible; transition: all 0.5s cubic-bezier(0=
.22, 1, 0.27, 1) 0s; transform: translateZ(0px); }

.floating-header-logo { overflow: hidden; margin: 0px 0px 0px 20px; font-si=
ze: 1.6rem; line-height: 1em; letter-spacing: -1px; text-overflow: ellipsis=
; white-space: nowrap; }

.floating-header-logo a { display: flex; align-items: center; color: rgb(21=
, 23, 26); line-height: 1.1em; font-weight: 700; }

.floating-header-logo a:hover { text-decoration: none; }

.floating-header-logo img { margin: 0px 10px 0px 0px; max-height: 20px; }

.floating-header-divider { margin: 0px 5px; line-height: 1em; }

.floating-header-title { flex: 1 1 0%; overflow: hidden; margin: 0px; color=
: rgb(46, 46, 46); font-size: 1.6rem; line-height: 1.3em; font-weight: 700;=
 text-overflow: ellipsis; white-space: nowrap; }

.floating-header-share { justify-content: flex-end; padding-left: 2%; font-=
size: 1.3rem; line-height: 1; }

.floating-header-share, .floating-header-share a { display: flex; align-ite=
ms: center; }

.floating-header-share a { justify-content: center; }

.floating-header-share svg { width: auto; height: 16px; fill: rgb(255, 255,=
 255); }

.floating-header-share-label { flex-shrink: 0; display: flex; align-items: =
center; margin-right: 10px; color: rgba(0, 0, 0, 0.7); font-weight: 500; }

.floating-header-share-label svg { margin: 0px 5px 0px 10px; width: 18px; h=
eight: 18px; stroke: rgba(0, 0, 0, 0.7); transform: rotate(90deg); }

.floating-header-share-fb, .floating-header-share-tw { display: block; alig=
n-items: center; width: 60px; height: 60px; color: rgb(255, 255, 255); line=
-height: 48px; text-align: center; transition: all 0.5s cubic-bezier(0.19, =
1, 0.22, 1) 0s; }

.floating-header-share-tw { background: rgb(51, 177, 255); }

.floating-header-share-fb { background: rgb(0, 94, 153); }

.progress { position: absolute; right: 0px; bottom: -1px; left: 0px; width:=
 100%; height: 2px; border: none; color: rgb(62, 176, 239); background: tra=
nsparent; -webkit-appearance: none; }

.progress::-webkit-progress-bar { background-color: transparent; }

.progress::-webkit-progress-value { background-color: rgb(62, 176, 239); }

.progress-container { position: absolute; top: 0px; left: 0px; display: blo=
ck; width: 100%; height: 2px; background-color: transparent; }

.progress-bar { display: block; width: 50%; height: inherit; background-col=
or: rgb(62, 176, 239); }

@media (max-width: 900px) {
  .floating-header { height: 40px; }
  .floating-header-logo, .floating-header-title { font-size: 1.5rem; }
  .floating-header-share-fb, .floating-header-share-tw { width: 40px; heigh=
t: 40px; line-height: 38px; }
}

@media (max-width: 800px) {
  .floating-header-logo { margin-left: 10px; }
  .floating-header-logo a { color: rgb(46, 46, 46); }
  .floating-header-divider, .floating-header-title { visibility: hidden; }
}

@media (max-width: 450px) {
  .floating-header-share-label { display: none; }
}

.site-header-content .author-profile-image { z-index: 10; flex-shrink: 0; m=
argin: 0px 0px 20px; width: 100px; height: 100px; box-shadow: rgba(255, 255=
, 255, 0.1) 0px 0px 0px 6px; }

.site-header-content .author-bio { z-index: 10; flex-shrink: 0; margin: 5px=
 0px 10px; max-width: 600px; font-size: 2rem; line-height: 1.3em; font-weig=
ht: 300; letter-spacing: 0.5px; opacity: 0.8; }

.site-header-content .author-meta { z-index: 10; flex-shrink: 0; display: f=
lex; justify-content: center; align-items: center; margin: 0px 0px 10px; fo=
nt-family: Georgia, serif; font-style: italic; }

.site-header-content .author-location svg { height: 1.9rem; stroke: rgb(255=
, 255, 255); }

.site-header-content .bull { display: inline-block; margin: 0px 12px; opaci=
ty: 0.5; }

.site-header-content .social-link:first-of-type { padding-left: 4px; }

@media (max-width: 500px) {
  .site-header-content .author-bio { font-size: 1.8rem; line-height: 1.15em=
; letter-spacing: 0px; }
  .author-location, .author-stats { display: none; }
}

.error-template .site-main { padding: 7vw 4vw; }

.site-nav-center { display: flex; justify-content: center; align-items: cen=
ter; text-align: center; }

.site-nav-center .site-nav-logo { margin-right: 0px; }

.error-message { text-align: center; }

.error-code { margin: 0px; font-size: 12vw; line-height: 1em; letter-spacin=
g: -5px; opacity: 0.3; }

.error-description { margin: 0px; color: rgb(115, 138, 148); font-size: 3re=
m; line-height: 1.3em; font-weight: 400; }

@media (max-width: 800px) {
  .error-description { margin: 5px 0px 0px; font-size: 1.8rem; }
}

.error-link { display: inline-block; margin-top: 5px; }

.error-template .post-feed { padding-top: 0px; }

.subscribe-overlay { position: fixed; top: 0px; right: 0px; bottom: 0px; le=
ft: 0px; z-index: 9000; display: flex; justify-content: center; align-items=
: center; background: rgba(0, 25, 40, 0.97); opacity: 0; transition: opacit=
y 0.2s ease-in 0s; pointer-events: none; backdrop-filter: blur(3px); }

.subscribe-overlay:target { opacity: 1; pointer-events: auto; }

.subscribe-overlay-content { position: relative; z-index: 9999; margin: 0px=
 0px 5vw; padding: 4vw; color: rgb(255, 255, 255); text-align: center; }

.subscribe-overlay-logo { position: fixed; top: 23px; left: 30px; height: 3=
0px; }

.subscribe-overlay-title { display: inline-block; margin: 0px 0px 10px; fon=
t-size: 6rem; line-height: 1.15em; }

.subscribe-overlay-description { margin: 0px auto 50px; max-width: 650px; f=
ont-family: Georgia, serif; font-size: 3rem; line-height: 1.3em; font-weigh=
t: 300; opacity: 0.8; }

.subscribe-overlay form { display: flex; justify-content: center; align-ite=
ms: center; margin: 0px auto; max-width: 500px; }

.subscribe-overlay .form-group { flex-grow: 1; }

.subscribe-overlay .subscribe-email { display: block; padding: 14px 20px; w=
idth: 100%; border: none; color: rgb(115, 138, 148); font-size: 2rem; line-=
height: 1em; font-weight: 400; letter-spacing: 0.5px; user-select: text; bo=
rder-radius: 8px; transition: border-color 0.15s linear 0s; -webkit-appeara=
nce: none; }

.subscribe-email:focus { outline: 0px; border-color: rgb(190, 205, 213); }

.subscribe-overlay button { display: inline-block; margin: 0px 0px 0px 15px=
; padding: 0px 25px; height: 52px; outline: none; color: rgb(255, 255, 255)=
; font-size: 1.7rem; line-height: 37px; font-weight: 400; text-align: cente=
r; text-shadow: rgba(0, 0, 0, 0.1) 0px -1px 0px; background: linear-gradien=
t(rgb(79, 183, 240), rgb(41, 160, 224) 60%, rgb(41, 160, 224) 90%, rgb(54, =
166, 226)); border-radius: 8px; box-shadow: rgba(0, 0, 0, 0.14) 0px 0px 0px=
 1px inset; -webkit-font-smoothing: subpixel-antialiased; }

.subscribe-overlay button:active, .subscribe-overlay button:focus { backgro=
und: rgb(32, 156, 223); }

.subscribe-overlay-close { position: absolute; top: 0px; right: 0px; bottom=
: 0px; left: 0px; display: block; }

.subscribe-overlay-close::before { transform: rotate(45deg); }

.subscribe-overlay-close::after, .subscribe-overlay-close::before { content=
: ""; position: absolute; top: 40px; right: 25px; display: block; width: 30=
px; height: 2px; background: rgb(255, 255, 255); opacity: 0.8; }

.subscribe-overlay-close::after { transform: rotate(-45deg); }

.subscribe-overlay-close:hover { cursor: default; }

.site-footer { position: relative; padding-top: 20px; padding-bottom: 60px;=
 color: rgb(255, 255, 255); background: rgb(0, 0, 0); }

.site-footer-content { display: flex; flex-wrap: wrap; justify-content: spa=
ce-between; align-items: center; font-size: 1.3rem; }

.site-footer-content, .site-footer-content a { color: rgba(255, 255, 255, 0=
.7); }

.site-footer-content a:hover { color: rgb(255, 255, 255); text-decoration: =
none; }

.site-footer-nav { display: flex; }

.site-footer-nav a { position: relative; margin-left: 20px; }

.site-footer-nav a::before { content: ""; position: absolute; top: 11px; le=
ft: -11px; display: block; width: 2px; height: 2px; background: rgb(255, 25=
5, 255); border-radius: 100%; }

.site-footer-nav a:first-of-type::before { display: none; }

@media (max-width: 650px) {
  .site-footer-content { flex-direction: column; }
  .site-footer-nav a:first-child { margin-left: 0px; }
}

.pagination { position: relative; width: 100%; max-width: 100%; margin: 1re=
m auto; font-size: 1.3rem; color: rgb(158, 171, 179); text-align: center; }

.pagination a { color: rgb(158, 171, 179); transition: all 0.2s ease 0s; }

.page-number { display: inline-block; padding: 2px 0px; min-width: 100px; }

.newer-posts, .older-posts { position: absolute; display: inline-block; pad=
ding: 0px 15px; border: 1px dashed rgb(221, 221, 221); text-decoration: non=
e; transition: border 0.3s ease 0s; }

.newer-posts { left: 0px; }

.older-posts { right: 0px; }

.site-footer { padding-bottom: 20px !important; }

.nav-current a:visited { color: rgb(255, 255, 0); }

@media (min-width: 900px) {
  .ctsingle .post-feed { margin-top: -70px; padding-top: 0px; }
  .ctsingle .site-nav { position: relative; top: -70px; }
}

@media (min-width: 795px) {
  .ctsingle .post-feed p { font-size: 1.8rem; line-height: 1.55em; }
}

@media (max-width: 650px) {
  .hide { display: none !important; }
  .copyright { text-align: center; }
}

.post-full-content pre code { color: rgb(229, 239, 245); }
------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-028b0c91-c58f-488b-b2a9-9ddc2428de4e@mhtml.blink

@charset "utf-8";

.button { display: inline-block; margin: 0px 0px 0px 10px; padding: 0px 20p=
x; height: 41px; outline: none; color: rgb(255, 255, 255); font-size: 1.5re=
m; line-height: 37px; font-weight: 400; text-align: center; text-shadow: rg=
ba(0, 0, 0, 0.1) 0px -1px 0px; background: linear-gradient(rgb(79, 183, 240=
), rgb(41, 160, 224) 60%, rgb(41, 160, 224) 90%, rgb(54, 166, 226)); border=
-radius: 5px; box-shadow: rgba(0, 0, 0, 0.14) 0px 0px 0px 1px inset; -webki=
t-font-smoothing: subpixel-antialiased; }

@media (max-width: 500px) {
  .button { margin: 10px 0px 0px; width: 100%; }
}

.placeholder-text { display: inline-block; width: 100%; }

.site-title { font-weight: 200; font-size: 8rem; }

.site-header::before { background: rgba(0, 0, 0, 0.5); }

.site-wrapper { min-height: auto; }

.highlight { width: 100%; }

.post-full-content h3 { margin-bottom: 1em; }

#TableOfContents > ul { list-style: none; margin: 0px; padding: 0px; }

.post-template .kg-card-markdown:not(:first-child) > p:first-child { font-s=
ize: inherit; line-height: inherit; }

.post-full-content p { word-break: break-word; }

.post-card-meta { display: flex; justify-content: space-between; align-item=
s: flex-end; padding: 0px 25px 25px; }

.author-list { display: flex; flex-wrap: wrap-reverse; margin: 0px; padding=
: 0px; list-style: none; }

.author-list-item { position: relative; flex-shrink: 0; margin: 0px; paddin=
g: 0px; }

.author-list-item:nth-child(1) { z-index: 10; }

.author-list-item:nth-child(2) { z-index: 9; }

.author-list-item:nth-child(3) { z-index: 8; }

.author-list-item:nth-child(4) { z-index: 7; }

.author-list-item:nth-child(5) { z-index: 6; }

.author-list-item:nth-child(6) { z-index: 5; }

.author-list-item:nth-child(7) { z-index: 4; }

.author-list-item:nth-child(8) { z-index: 3; }

.author-list-item:nth-child(9) { z-index: 2; }

.author-list-item:nth-child(10) { z-index: 1; }

.static-avatar { display: block; overflow: hidden; margin: 0px -5px; width:=
 34px; height: 34px; border: 2px solid rgb(255, 255, 255); border-radius: 1=
00%; }

.author-name-tooltip { position: absolute; bottom: 105%; z-index: 999; disp=
lay: block; padding: 2px 8px; color: rgb(255, 255, 255); font-size: 1.2rem;=
 letter-spacing: 0.2px; white-space: nowrap; background: rgb(21, 23, 26); b=
order-radius: 3px; box-shadow: rgba(39, 44, 49, 0.08) 0px 12px 26px, rgba(3=
9, 44, 49, 0.03) 1px 3px 8px; opacity: 0; transition: all 0.3s cubic-bezier=
(0.4, 0.01, 0.165, 0.99) 0s; transform: translateY(6px); pointer-events: no=
ne; }

.author-list-item:hover .author-name-tooltip { opacity: 1; transform: trans=
lateY(0px); }

@media (max-width: 650px) {
  .author-name-tooltip { display: none; }
}

.reading-time { flex-shrink: 0; margin-left: 20px; color: rgb(115, 138, 148=
); font-size: 1.2rem; line-height: 33px; font-weight: 500; letter-spacing: =
0.5px; text-transform: uppercase; }

@media (min-width: 795px) {
  .home-template .post-feed .post-card:nth-child(6n+1):not(.no-image) { fle=
x: 1 1 calc(100% - 300px); }
}

.carbon-wrapper { display: flex; justify-content: center; align-items: flex=
-start; }

#carbonads { display: block; overflow: hidden; font-family: -apple-system, =
BlinkMacSystemFont, "segoe ui", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "he=
lvetica neue", sans-serif; padding: 1em; background: rgb(255, 255, 255); te=
xt-align: center; line-height: 1.5; font-size: 14px; max-width: 158px; }

#carbonads a { color: inherit; text-decoration: none; }

#carbonads a:hover { color: inherit; }

#carbonads span { display: block; overflow: hidden; }

.carbon-img { display: block; margin: 0px auto 8px; line-height: 1; }

.carbon-text { display: block; margin-bottom: 8px; }

.carbon-poweredby { text-transform: uppercase; display: block; font-size: 1=
0px; letter-spacing: 1px; line-height: 1; }

.chroma { color: rgb(248, 248, 242); background-color: rgb(39, 40, 34); }

.chroma .err { color: rgb(150, 0, 80); background-color: rgb(30, 0, 16); }

.chroma .lntd { vertical-align: top; padding: 0px; margin: 0px; border: 0px=
; }

.chroma .lntable { border-spacing: 0px; padding: 0px; margin: 0px; border: =
0px; width: 100%; overflow: auto; display: block; }

.chroma .hl { display: block; width: 100%; background-color: rgb(255, 255, =
204); }

.chroma .lnt { margin-right: 0.4em; padding: 0px 0.4em; display: block; }

.chroma .ln { margin-right: 0.4em; padding: 0px 0.4em; }

.chroma .k { color: rgb(102, 217, 239); }

.chroma .kc { color: rgb(102, 217, 239); }

.chroma .kd { color: rgb(102, 217, 239); }

.chroma .kn { color: rgb(249, 38, 114); }

.chroma .kp { color: rgb(102, 217, 239); }

.chroma .kr { color: rgb(102, 217, 239); }

.chroma .kt { color: rgb(102, 217, 239); }

.chroma .na { color: rgb(166, 226, 46); }

.chroma .nc { color: rgb(166, 226, 46); }

.chroma .no { color: rgb(102, 217, 239); }

.chroma .nd { color: rgb(166, 226, 46); }

.chroma .ne { color: rgb(166, 226, 46); }

.chroma .nf { color: rgb(166, 226, 46); }

.chroma .nx { color: rgb(166, 226, 46); }

.chroma .nt { color: rgb(249, 38, 114); }

.chroma .l { color: rgb(174, 129, 255); }

.chroma .ld { color: rgb(230, 219, 116); }

.chroma .s { color: rgb(230, 219, 116); }

.chroma .sa { color: rgb(230, 219, 116); }

.chroma .sb { color: rgb(230, 219, 116); }

.chroma .sc { color: rgb(230, 219, 116); }

.chroma .dl { color: rgb(230, 219, 116); }

.chroma .sd { color: rgb(230, 219, 116); }

.chroma .s2 { color: rgb(230, 219, 116); }

.chroma .se { color: rgb(174, 129, 255); }

.chroma .sh { color: rgb(230, 219, 116); }

.chroma .si { color: rgb(230, 219, 116); }

.chroma .sx { color: rgb(230, 219, 116); }

.chroma .sr { color: rgb(230, 219, 116); }

.chroma .s1 { color: rgb(230, 219, 116); }

.chroma .ss { color: rgb(230, 219, 116); }

.chroma .m { color: rgb(174, 129, 255); }

.chroma .mb { color: rgb(174, 129, 255); }

.chroma .mf { color: rgb(174, 129, 255); }

.chroma .mh { color: rgb(174, 129, 255); }

.chroma .mi { color: rgb(174, 129, 255); }

.chroma .il { color: rgb(174, 129, 255); }

.chroma .mo { color: rgb(174, 129, 255); }

.chroma .o { color: rgb(249, 38, 114); }

.chroma .ow { color: rgb(249, 38, 114); }

.chroma .c { color: rgb(117, 113, 94); }

.chroma .ch { color: rgb(117, 113, 94); }

.chroma .cm { color: rgb(117, 113, 94); }

.chroma .c1 { color: rgb(117, 113, 94); }

.chroma .cs { color: rgb(117, 113, 94); }

.chroma .cp { color: rgb(117, 113, 94); }

.chroma .cpf { color: rgb(117, 113, 94); }

.chroma .gd { color: rgb(249, 38, 114); }

.chroma .ge { font-style: italic; }

.chroma .gi { color: rgb(166, 226, 46); }

.chroma .gs { font-weight: 700; }

.chroma .gu { color: rgb(117, 113, 94); }

.hero-container { position: relative; }

.triplebyte-cta { max-width: 1040px; text-align: center; }

.cf-wrapper { max-width: 330px; padding: 15px; font-size: 14px; line-height=
: 1.4; text-align: center; font-family: system, "helvetica neue", Helvetica=
, Arial; margin-left: auto; margin-right: auto; display: block !important; =
}

.cf-header { font-size: 12px; color: rgb(102, 119, 136); display: block; ma=
rgin-bottom: 8px; }

.cf-header::before { content: "=E2=80=94"; margin: 0px 0.5em; opacity: 0.5;=
 }

.cf-header::after { content: "=E2=80=94"; margin: 0px 0.5em; opacity: 0.5; =
}

.cf-text, .cf-text:hover { text-decoration: none; color: rgb(51, 51, 51) !i=
mportant; box-shadow: none !important; }

.cf-powered-by { margin-top: 5px; font-size: 11px; display: block; color: r=
gb(102, 119, 136); text-decoration: none; text-align: center; box-shadow: n=
one !important; }

.hero-cta { margin: 1.5em 0px; padding: 6.5vw 7vw 7vw; border: 1px solid rg=
b(237, 244, 248); text-align: center; background: rgba(244, 248, 251, 0.9);=
 border-radius: 7px; position: absolute; top: 50%; left: 50%; transform: tr=
anslate(-50%, -60%); width: 100%; }

@media (min-width: 650px) {
  .hero-cta { padding-top: 100px; padding-bottom: 100px; transform: transla=
te(-50%, -75%); }
}

.cta-title { margin: 0px 0px 3px; padding: 0px; color: rgb(21, 23, 26); fon=
t-size: 3.5rem; line-height: 1; font-weight: 700; }

@media (max-width: 650px) {
  .cta-title { font-size: 2.4rem; }
}

.cta-text { margin-top: 0.75em; margin-bottom: 1em; color: rgb(92, 112, 120=
); font-size: 2.2rem; line-height: 1.55em; letter-spacing: 0.2px; }

@media (max-width: 650px) {
  .cta-text { font-size: 1.6rem; }
}

.overlay-cta { position: fixed; bottom: 0px; left: 0px; z-index: 99999; bor=
der: 1px solid rgb(237, 244, 248); background: rgb(255, 255, 255); width: 1=
00%; padding: 1em 4em; visibility: visible; transition: all 0.5s cubic-bezi=
er(0.22, 1, 0.27, 1) 0s; transform: translateY(0px); flex-wrap: wrap; }

@media (max-width: 500px) {
  .overlay-cta { padding: 1em; background: rgba(255, 255, 255, 0.95); }
}

.overlay-cta--hidden { visibility: hidden; transition: all 0.5s cubic-bezie=
r(0.19, 1, 0.22, 1) 0s; transform: translate3d(0px, 120%, 0px); }

.overlay-cta--closed { transition: all 0.5s cubic-bezier(0.19, 1, 0.22, 1) =
0s; transform: translate3d(0px, 120%, 0px); visibility: hidden !important; =
}

.overlay-cta__inner { position: relative; max-width: 1040px; display: flex;=
 flex-direction: row; justify-content: space-between; align-items: center; =
margin: auto; }

@media (max-width: 500px) {
  .overlay-cta__inner { flex-wrap: wrap; }
}

@media (max-width: 500px) {
  .overlay-cta__text-container { text-align: center; flex: 0 0 100%; }
}

.overlay-cta__title { font-size: 1.6rem; }

.overlay-cta__text { font-size: 1.6rem; margin: 0px; }

@media (max-width: 500px) {
  .overlay-cta__text { font-size: 1.2rem; }
}

.overlay-cta__button-container { text-align: center; flex-direction: column=
; }

@media (max-width: 500px) {
  .overlay-cta__button-container { width: 100%; }
}

.overlay-cta__button { min-width: 150px; }

@media (max-width: 500px) {
  .overlay-cta__button { width: 100%; }
}

.overlay-cta__close { font-size: 0.9em; }
------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-2dc95087-34f4-48ff-b1ad-42b5a6958011@mhtml.blink

@charset "utf-8";

.fluid-width-video-container { flex-grow: 1; width: 100%; }

.fluid-width-video-wrapper { width: 100%; position: relative; padding: 0px;=
 }

.fluid-width-video-wrapper iframe, .fluid-width-video-wrapper object, .flui=
d-width-video-wrapper embed { position: absolute; top: 0px; left: 0px; widt=
h: 100%; height: 100%; }
------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-82ee99a6-b712-48cd-a544-0d87d75e00d4@mhtml.blink

@charset "utf-8";

#cf .cf-header::before { content: " "; margin: 0px 0.5em; opacity: 0.5; }

#cf .cf-header::after { content: " "; margin: 0px 0.5em; opacity: 0.5; }
------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://codefund.io/display/6fcc289d-9acb-4d04-bf46-000e69d751d2.gif

R0lGODdhAQABAJEAAAAAAP///wAAAAAAACH5BAkAAAIALAAAAAABAAEAAAICVAEAOw==

------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://codewithhugo.com/testing-an-express-app-with-supertest-moxios-and-jest/bekir-donmez-unsplash_hu1b70a0026307992934f1dc9b7f65dacb_58291_0x800_resize_q60_box.jpg

/9j/2wCEAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxO
UlNSMj5aYVpQYEpRUk8BDg4OExETJhUVJk81LTVPT09PT09PT09PT09PT09PT09PT09PT09PT09P
T09PT09PT09PT09PT09PT09PT09PT//AABEIAyACFQMBIgACEQEDEQH/xAGiAAABBQEBAQEBAQAA
AAAAAAAAAQIDBAUGBwgJCgsQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
anN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+gEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoLEQAC
AQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXx
FxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqS
k5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
9vf4+fr/2gAMAwEAAhEDEQA/APQKWiiszYKKKKYgooooAKKKKACilxRigBKKXFFACUUtFABRRRQA
UUUUAFFFFABRRRQAUUUtACUtFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAB
RRRQAUUUUAFFFFABSUtFACUUtFACUUtFABSUtFACUUtFACUUUtACUtJS0AFJS0lABRRRQAlFFFIA
oopaYBRRRQAUUUUAFFFFABRRRQAUUUtACUUtFACUUtFACUtFFABRRRQAUUUUAFFFFABRRRQAUUUU
AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAC0lFLQAlFLRQAlFFFABRRRQAUUUUAFFFFABRRR
QAUUUUAFFFFACUtFFABSUtFACUUUUAJRRRSGKKKKKYgooooAKKKKACiiigBaSlooAKKKKACiiigA
ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKWgBK
KWigAooooAKKKKACiiigAooooAKKKKACiiigBKKWigBKKWkoAKKKKACiiigAooooAbRRRSGLS02l
oAKKWimISiiigApaSloAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACilooASilooASilpKAC
iiigAooooAKKKWgBKKWigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
KKKACkoooAKKKKACiiigAooopDG0UUUAFKKSigBaWkFFABRRRQIKKKWmAUUUUAFFFFABRRRQAUUt
FACUUtFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRR
QAUUUUAFFFFABRRS0AJRS0UAJRRRQAUUUUAFFFFABSUtJSAKKKKACiiigAooooGMpaSloAKKKKAF
FFAooAKKKKAClpKWgAooooAKKKWgQUUUUwCiiigAopcUYoASilxSUAFFFFABRRRQAUUUUAFFFFAB
RRRQAUUUUAFFLRQAlFLRQAUYopaAEoNLSUAJRS0UAJRRRQAUUUUgCiiigBcUUZooASiiigAooooG
FFFFABRRRQAUlLRQAlFFFABRRRQAUUUUAMpaSloAKKKKAClpKWgAooooAKWkpaACiiigBaKSloAK
KKKAClpKWgQtFFFMApKWigBMUUtFACUUtFACUYpaKQDaKWjFAxKKXFFACUooxRQIWiiimAUUUUAF
FFFABRRRQAUlLRQAmKKWikAlGKWigYmKKWigBKSlNJQAUUUUAFFFFABRRRQAUUUUAFFFFACUUUUA
FFFFABRRRQAyloooAKKKKAClpKUUAFFFFABS0lFAC0UUUAFFFFAC0UlLQAUUUUALmikooAdRSZoo
AWiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
SilpDQAlFFFABRRRQAUUUUAFFFFABRRRQAUUUUAJRS0UAJRRRQA2iiigdgopaKBCUtFFABRRRQAU
UUUAFLSUUALRRRQAUUUUAFFFFAC0UlFAC0UUUALmjNJRQA6im0uaAFopKWgAooooAKKKKACiiigA
ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACikzRQAGkpaKAEoopaAEopcUYoASilxSUA
FFFFABRRRQAUUUUAFFFFADKKKKBiiiiigAooooAKKKKACiiigLBRRRQAUtFFAgooooAKKKKACiii
gApaSigBaKSloAKKKKAClpKKAFpabS0ALRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUlFFAB
RRSUAFFFFABRRRQAUUUUALRSUUALS02loAWkopKAF4opKKACiiigAooooAKKKKAGUtJSigYUUUUA
FFFFABRRRQAUUUUAFFFFAC0UlFAC0UUUAFFFFABRRRQAUUUUAFLRRQAUUUUAFFFFAgooooAWlptL
mgBaKSloAKKKKACiiigAooooAKKKKACiiigAopKKAA0lFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
FFABRRRQAUUUUAFFFFABRRRQAylFJSigYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUtFFABRRRQA
UUUUAFFFFABS0lFAC0UlFAC0UUUAFFFFABRRRQIKXNJRQAtLTaXNAC0UlLQAUUUUAFFJmigAopKK
AFzSUUUAFFFFABRRRQAUUUUDCiiigAooooAKKKKACiiigAooooAKKKKBBRRRQAUUUUDGUUUooAKK
KKACiiigAooooAKKKKACiiigAooooAWikpaACiiigAooooAKKKKACiiigAooooAKKKKAClrN1DW7
HTm2TyEyf3EGTVGPxdprNhknT3Kgj9DTsJyR0FFZkOv6VMcLeIp9Hyv860UdXUMjBlPQg5BpAmOo
oooGFFFFABRRRQIKKKKACiiigAooooGFFFFABRRRQAUUUUwCiiigAooooAKKKKACiiigAooooAKK
KKACiiigAooopAFFFFMBlKKSikAtFJS0AFFGaKACiiigAooooAKKKKACiiigAooooAWikooAWiii
gAooooAKKKKACiiigAoorktd8Xy6XqclolqpCfxSZ59x7UCbscxrTyW+q3KXJYSeYxOe/PFZv2gK
eTW/feKNM1ZANT0xZGHAeN8MPxrmtRitGlB0ppxGeq3BXI+hFURoWhOjjJOa1NF1yfS7pSsha3Yg
SRnkY9R71y6R3K8gKfo1dJ4X0I6pcLJdzRRwKeU80b29sdRQCR6kCCAQcgjIpaQABQBwB0oqTQWi
kooAWikooAWikooAWikpaACikooAWikooAWikooAWikpaACiiigAooooAKKKKACiiigAooooAKKK
KACiiigAooooAKKKKAGUUlFIYtFFFAgooooAXNFJRQAtFJRQAtFGaKLgFFFFFwCiiii4BRRRRcAp
aSii4C0UlFFwFoooouAUUUUAFUdT0ix1WIR3kAfH3WHDD6Gr1c54t1SazgihtZCrSZLMvUAdqaE2
cj4h8J/YZWNpd27p/ckmVXH4HFci7NG2DkYroMvIxZonJJySQaQwB+SnFVYzcjBS4IPDVMl06jhq
05NOgYHMahvrioo7GCBsyW/nIevzkEfQjinYLk9h4j1GywILyVQP4S2R+RrsND8cRTkRantRj0kR
ePxFYNrY+EbkATTahZv3DkMv5gH9a6Cy8EaFMomgvZ7iP/YkUg/iBUlLyOwUhlBByD0NLTY0WKNY
0GFUAAegFOqblhRRRRcAoooouAUUUUXAKKKKLgFFFFFwCiiii4BRRRTAKKKKQBRS0lFwCilpKLgF
FLRRcBKKKKYBRRRQAUUUUAFFFFABRRRQAyikopDFopKWgBaKSigBaKSigBaKSloAKKKKBC5ozSUU
ALRSUUALRRRQAUUUUAFFFFABS0lFIBa4jxD4qnS8e2sZRFHGdpcD5ie+K669vrawh8y6lCDsO7fQ
V5heQ2dxezTAyGN3LKpODgmqiTIr3GqzTPma4kkJ/vOTUP25QOtSyWlj2Rh/wM/41Wk022fPlzSK
fc5FWQI+okjAao3vmPU/Sqk1hcxZI2yD/ZqozyIcOpBHqKA0NQ3THgsaUXbZzu561mCYHqacHB6n
ilqM1xcRzEjIVuxPT8afFe3VhMCGeB+zIcA/iOtZAb0NaVpdAwmOUK6f3WGRQOx6H4Q8RS6ozWl2
weZV3I4GNw75966muD8C/wBmW95KQ7LdSDbGHPy49B713lQykFFFFIYUUUUAFLSUtMAooooAKKKK
ACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiikoAKKKKAI6KBRQMKKKKACiii
gBaKSigBaKSloAKKKKAClpKKAFopKWgAooooAKKKKAFzRSUUALRSUtAHnfjWeZdcdXLBAi7B2xjn
9c1zD3RPU5xXq+taJaazCFuFxIoOyQdR/iK8y1rQb3SpitxFlCflkXlT+NVcmxR+1YHJpPtJz1zV
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
AJ6J+YoA/9k=

------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://codewithhugo.com/img/hugo_small.jpeg

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
/wDdIxrgAYZI1vhDX//Z

------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://codewithhugo.com/img/cover.jpg

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
WVdW6qN75eXsTXo9rl9Xo+r3Hbm/Z7PJ3uVydvl5dcvJvk1yNN2ckOLHj9f1vT7M1y1eRDVss0jN
8z8++H+X+wx4nx32/v8Ae87sfpn2VWUhVhKayLEpLOt8T6XxP4Z8f9X+uer3eX7L6Tesms6ZoiJn
OVrWlAlkjWbJnwPw3854cgyiEgMkIgEGUdXZyRdcyckc3NeLl5+/z93q9rk4/W7nX7XH3O538evw
59DfY5dc3Z3vWOe6bUxni6fW32+9zc2muWybt1EjGePGscPFNcvY8r53vfUcvUxycvLrW98mpVay
BrImcZzMZTgx298XJyckznHHeVa3u22oSYzcjdqazQSpAznwvyb8z8XjgZqMxAIiAMiQ7LdNXmzy
3i5ms83Y37HFOTkmvT7/ABuzyc3pO7eTm7k5+TfJyuXHLrW5rU0xwzj6s5ex2uTXNy1daYxiXda1
yWVsqTQLHFjC8m97KESZxjjvJybtWFhQNZlzJxzTkKmclNW0IgIJkTPmfGfnfw/h8YyyRJQmSAIJ
D1ba03dck5L3Mtcve50c3N3uW8m+bs93i7nNd83bvJza3vVvLqbb0wicXHje2uxvXJus8fHx8nZ5
tbulK0BahoZzx8eXJvetLEYzx4nJyctUirJVgssExiQtA01bQCZFgCGOn4/xnwHx3icURMksCIgN
ZQh9Hq28l1yavJrk7Gs67HO5ObXL2ubk1rk12Oe9nkvLy8m9815Nt3W5bq5FxIpda5NaTi4+LXb7
PNvVqroKLGikymMYXet2mJnPG3verNMm0zqgUiZsxMxapo1ZsAmQWABOLqef4vyfxHyfideZiWAS
sCywhl95d703yN73yb3bz8t1yb5ubbe+XXPy8vJy3l5N7cmuTVu7dlqLSahpd3ROPE5efl5db0rS
lFTSgSSYIumiTOTV2sNFJQKQmbMshoaVVAIZ1koQCODrdTzfE+W+Q+U8bqZAJWYAgyn6rrd3re2t
cm928u961vk5Ldb3y75OXk1vXLybXW9aurbpSqVTRu60GJdcvLvdq1oos0oAkYA0JILqpooSqQpB
MiBQ0pKAEsZBUAmOHg6vQ8zw/mvlvm/J6XGIphBYDMftO9273d3Wt273pyXXJq7uuXfJrk1re+TW
11q7ttqlqi6W262UWXW97tt0pSpqgARECiAGlAKABCEIqigAAEGRSBmY4eDg6fn+Z4/z3zXznldL
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

------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://codewithhugo.com/responsive-semantic-images-with-css/nate-bell-unsplash_hu4373584623a1c14afa1cede73ef625a0_253935_0x300_resize_q60_box.jpg

/9j/2wCEAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxO
UlNSMj5aYVpQYEpRUk8BDg4OExETJhUVJk81LTVPT09PT09PT09PT09PT09PT09PT09PT09PT09P
T09PT09PT09PT09PT09PT09PT09PT//AABEIASwA5QMBIgACEQEDEQH/xAGiAAABBQEBAQEBAQAA
AAAAAAAAAQIDBAUGBwgJCgsQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
anN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+gEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoLEQAC
AQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXx
FxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqS
k5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
9vf4+fr/2gAMAwEAAhEDEQA/AOZfxVC/DWWQevI/wquuqxTs/wBntY4Hbq6qAQPrTRFHJlGAwwI6
e1VDbeRJJCpJKHHPU1lZdDeUOVo1I7s/8tJg2PXBrX0rU9Nt4JXMFt5rv8xIBZq5DaD3H51ZtvLQ
EZGc1L0QlG7Osl1tCCsECAEdQoFQx6rITncg9yvFYZIHAI9+aQnOduRgelZuUuhtGlF7mpJqEkLs
E8s89Qo/wpq6muw74gT7CsobmPfAp8asw6cn1ocn3KVKFyzLfB3B2Z/3mq7ZXEDt+8hjJ/3mH9az
BAcbiAKtQ28jEeWGP0HFRKb6MpUo9UdBB9jPD2ELqe+8mriW+lMvzWkYrBjDqQpDBh271K80vl/u
y24Dp71g6lS+jL9hB9DaNhpB5W2T04IqhdabppJKRMvsCP8ACqMUjwxMwZ9x5PSqk9zMM/M249Rg
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

------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://codewithhugo.com/how-to-make-beautiful-simple-cli-apps-with-node/cli-screenshot_hu0145fe68288e4ee5a9114ca5bc9a109b_30699_0x300_resize_q60_box.jpeg

/9j/2wCEAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4pLSwzOko+MzZGNywtQFdBRkxO
UlNSMj5aYVpQYEpRUk8BDg4OExETJhUVJk81LTVPT09PT09PT09PT09PT09PT09PT09PT09PT09P
T09PT09PT09PT09PT09PT09PT09PT//AABEIASwCdAMBIgACEQEDEQH/xAGiAAABBQEBAQEBAQAA
AAAAAAAAAQIDBAUGBwgJCgsQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
anN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+gEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoLEQAC
AQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXx
FxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqS
k5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
9vf4+fr/2gAMAwEAAhEDEQA/AOLoooqxBRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAF
FFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRR
QAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFA
BRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAF
FFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRR
QAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFA
BRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAF
FFFABRRRQAUUUUAFFFFABRRRQAUda3vDOgprUWoOzsGt4cxovVnIOPw4rT06ws/DNkNT1uNWv35t
bU8lSO5H+PT60XA5CRHicpIjIw6qwwRWjp+gajqNr9ptYkaLcUy0qrkjHHJ96pXl1Le3Ut1cNull
Ysx963YbUXXg+3U3NvAFvJDumbaD8q9ODQ9gMK8tLixuXt7uJopU6q1Q11QnstX8R6PYAfaLe3jW
3aRgR5uAcn1xVXULnRVt9Rs4LFY5I2VbeUgl2Ib5yTnAGBwMUXA5+iuyGlWWmrYwTQafN50ayXMl
xciNwG7INwxgd8c1m6VZaYNS1ZbofabS1hd0aNuWAdQCCPUcZ96Lgc/RWxK9nqz6dbWtrDaXEk5j
kEYO3axULyScnrWte2OnL9vtjFpsEUMbfZ5FugZi69Nw3c5weMUXA5GituJbPTNFtrqeyju7q9LF
PNJ2Ropx0BGSTmrd1p9mNU1ZBbIiRacJo0GcI5VDkc+5obsNK5zNWDZuNOF7vj8sy+Vt3fPnGc49
Pera20R8Ly3fljzheLGH/wBnYxx+eKmvPs9x4djvEsoLeUXRiJi3crsB5yT3NAjGorc8PxWEttdC
UWz6h8v2eO6crGw7+gz6ZNV9SWay1ONrvSYLdlUEwYby5OvP3v5HtQBTvLN7Mw+Y8b+dEsq7GzgH
sfQ+1ReVKYTMI38oNsL4+XdjOM+taOvxQR3Fq9vAkAmtI5WRM7QzDJxkmteC40YeFWZ9PuDELpFd
RPgs+w/MDjgdeKLgcpRW7otlZ319fXIhUW1tEZI4Z5toJJAUM3HGetJrcFqNPtrhBYxXfmMksVpM
HUrjKtgE47ii4GHRRW1YxWlloTanc2q3U0k5hhRydiYUEkgHnqOKAM7T7CbUbkwW+3eEZ/mOBgDJ
qtXT+GbiC78RIy2sdov2aUSCHJB+U5IBJxx2qNl0y/0HU5rWwW3Ni0XkyBiXdWbB3c4zRfUDnKK7
EaVZ6atjBPBp8/nRrJcyXFyI3Absg3DGB371nWWm2cTavfSbbu109tsSBuJSzYUkjt3ouBgxIZZU
jXG52CjPqafd20lndzWs2PMhco2DkZBxV0Xkd3eWe2xt7Z1mGTCGAYZHUEmtvxBYW+nyX+oXUYuJ
ry4kW3UZKRfMcsxHVvQfnRcDkqKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
AKKKKACiiigDX8Pa/caDPNJBEkqyqAyuSOR0NU9U1K61W9a6vH3SNwAOAo9APSqlAoAKtvfu+kR6
eY12RzNLvzySQBj9KrSI8blJEZHHVWGCPwqxY6dd37OLSBpAgy7ZAVfqTwKADS71tN1KC9RA7Qtu
Ck4BqCeUzTySkAF2LY9MnNS3llcWMoiuUCsy7htcMCPXIJFNu7WS0mEUuzcVDfKwYYIyOlAGh/bE
NxbwJqdit3JboEjk80xnaOgbHXHrwarW+oG3a98qBFW7iaMqCcICwPH5VVMMohExjfyi20PtO0nr
jPr7UygB0cjxSpJGxV0YMpHYjkVp3eqWd2ZZpNLj+1TA75BM23cerBfXv1x7VlUUAa1vrMSafBa3
Wnw3LWpYwO7sNuTkggfeGeavarqv2fxJcXDRx3UdxbJHMm7AcGNc8jociuboosBq3usi40wadBZx
29ssolUKxYg4IOSepOevsKit9Sjj0p7CazWZTIZVYuVKsVA7delZ9FFgLlndWcMTR3enrc5bIcSs
jL7ccfpT9V1M6ibdVgWCG2j8uJAxYgZzyT1qhRQBo3upRXlpDE9kizQxJEJhI2dq+3SksdSjgs5b
K6tRc28jiTG8oysARkEexrPoosBoWupi0vJ5IrVPs06GOS3ZiQUOOM9c5Gc+tRXtxZzIqWlgLYA5
LGUuze3PAH4VUooAK0tP1UW1nJZXVrHd2ruJNjMVKNjG5WHTis2igDVt9Xhs9QF1Y2CQqImi8syM
2dwIySe/NVrXUXttNvbJY1ZbwJuYnldrZqnRRYDWOsQ3FvCmp2C3cluuyOTzSh2joGx1x+FRWOrP
ZTXOy3ja1ugVltiTtK54AOcjHY5rOooAvXF5aGWB7Kw+zeU245mZy/TjnpVh9emlN8lxEslteO0h
hJOI3JyGU9iP1rJooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
iiimBueHdAGtQX8hlZTbRbkVRkuxBwPpxWlpel2eg6cuta4mbk82to3BJHQkfr7Vl+GfED6BcTuI
PPSZACu7bgjof1qlq2qXOr3z3d22WPCqOiD0FJ3uBDfXct9fTXc+PMlcs2BgVruzw+D7WKFgi3ly
/nsTwdu3aD7d6wa1NN1WO3sZ9Pvrb7RaTMHwG2vG395Tg+35UNaAF7p/9iX0K3y297HJCJFEcjbW
U5wc8Gm6/bW9rqZjto/LiMUbhdxONyAnk+5o1zUotSmtjBC8cdtbpAodgxIXPJwB607VtTtNRjRl
sGhuVVFaXz9wYKu37uBjoO9AGm76QfCsBa3vvJ+2PgCdN27YuTnb0xjjFc1LsMrmIMI8naGOSB2y
a0bPUbVdMbT9QtpZYhN50bRSBGVsYI5ByDgVQuHjknd4YvKjLEqm7dtHpnvQBHRRRQAUUUUAFFFF
ABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUA
FFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAU
UUUAFFFFABRRRQAUUUUAFFFFABRWzoOgvrUN9Ikuz7LFuChcl2IOB+laekaTa6NZrrXiBeTzbWrD
5nPYkf59aLgcmQQcEEH3qe0s7q9l8u0gkmfqQi5x9fSl1C8e/v57uUAPM5YgdB7VqySPa+DbdICV
F5cSeeR/EFxhT7d6AM86RqAvBaNauk5XeEfC5X15qC7tJ7K4a3uozHKoBKn3GRURJYAEkgcDnpWv
4q/5DR/64Q/+i1oAx6K7O18MRwQWyXGmy3rXMYeSdJxGIAem1c/MR15rHh0m3tZtRnvy8trp8vlb
YztMzZIAz2GBkmi4GJRXQzWem3P9jTW1o9sl5ctFLH5xfgMo4J+pqWSy0V5dR062t5jPbJLIt00h
6pk7dvTHGM9aLgczRWjfWkMGkaZcRg+ZcrIZDnqQ5A/StUaNp39s6hbSs8VvBYicOMsVbahJx3+8
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
AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKs2GoXWnTNNZyBHdSjZUMGX0IIx2FVqKAL
l/ql5qIjW6kBSLOxERUVc9cAACqdFFABRRRQAVqw+I9WghijS4XEKhI2aJCyKOwYjIrKooAV3aR2
d2LMxJJPUk0lFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUU
UAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQ
AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAB
RRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUU
UAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQ
AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAB
RRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF
FFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUU
UAFFFFABRRRQB//Z

------MultipartBoundary--PnyRkp6gFnAQ4wpsq1Lj9RozuxMArwQoDaIef02cwb------
